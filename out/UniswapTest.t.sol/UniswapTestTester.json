{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testContract",
      "outputs": [
        {
          "internalType": "contract UniswapTest",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenBalances",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00001960ff19909116600117166201000017905534801561002a57600080fd5b50612c328061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b6f8657c11610071578063b6f8657c146100f4578063ba414fa6146100fc578063c36631b414610118578063e0bab4c414610120578063f8ccbf4714610128578063fa7626d414610130576100a9565b80630a9254e4146100ae5780631afd7ba7146100b85780633a768463146100c05780636e008a03146100e457806389a30271146100ec575b600080fd5b6100b6610138565b005b6100b6610232565b6100c86102c6565b604080516001600160a01b039092168252519081900360200190f35b6100b66102f6565b6100c8610513565b6100b661052b565b61010461063f565b604080519115158252519081900360200190f35b6100c8610836565b6100c8610845565b61010461085d565b61010461086c565b60405161014490612418565b604051809103906000f080158015610160573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392831617908190556101e191683635c9adc5dea00000916101d591166101c96370a0823160e01b6101bd6001736b175474e89094c44da98b954eedeac495271d0f610875565b9063ffffffff61089a16565b9063ffffffff6108b616565b9063ffffffff6108de16565b60085461023090683635c9adc5dea00000906101d5906001600160a01b03166101c96370a0823160e01b6101bd600173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4863ffffffff61087516565b565b6008546040805163b0f479a160e01b815290516000926001600160a01b03169163b0f479a1916004808301926020929190829003018186803b15801561027757600080fd5b505afa15801561028b573d6000803e3d6000fd5b505050506040513d60208110156102a157600080fd5b505190506102c381737a250d5630b4cf539739df2c5dacb4c659f2488d6108e8565b50565b604080516e6865766d20636865617420636f646560881b8152905190819003600f0190206001600160a01b031681565b604080516002808252606080830184529260208301908036833701905050905073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb488160008151811061033857fe5b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f8160018151811061037a57fe5b6001600160a01b0392831660209182029290920181019190915260085460405163243c47a160e21b81526003600482018181526002602484018190523060648501819052603c42016084860181905260a0604487019081528a5160a48801528a5160609a98909816986390f11e8498969794968c96949593949360c40191878101910280838360005b8381101561041b578181015183820152602001610403565b505050509050019650505050505050600060405180830381600087803b15801561044457600080fd5b505af1158015610458573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561048157600080fd5b81019080805160405193929190846401000000008211156104a157600080fd5b9083019060208201858111156104b657600080fd5b82518660208202830111640100000000821117156104d357600080fd5b82525081516020918201928201910280838360005b838110156105005781810151838201526020016104e8565b5050505090500160405250505090505050565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6008546040805163c082373160e01b815290516000926001600160a01b03169163c0823731916004808301926020929190829003018186803b15801561057057600080fd5b505afa158015610584573d6000803e3d6000fd5b505050506040513d602081101561059a57600080fd5b5051600854604080516325d4c1bd60e11b815290519293506000926001600160a01b0390921691634ba9837a91600480820192602092909190829003018186803b1580156105e757600080fd5b505afa1580156105fb573d6000803e3d6000fd5b505050506040513d602081101561061157600080fd5b5051905061062882683635c9adc5dea00000610a0a565b61063b81683635c9adc5dea00000610a0a565b5050565b60008054610100900460ff16156106615750600054610100900460ff16610833565b600061066b610b0a565b1561083057604080516e6865766d20636865617420636f646560881b808252825191829003600f9081018320746c6f616428616464726573732c627974657333322960581b8452845193849003601501842092845284519384900390910183206001600160a01b039081166020808601919091526519985a5b195960d21b8587015285518086038701815260608681019097526001600160e01b0319851660808701908152815193909416959093926084909101918401908083835b602083106107465780518252601f199092019160209182019101610727565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040526040518082805190602001908083835b602083106107aa5780518252601f19909201916020918201910161078b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461080c576040519150601f19603f3d011682016040523d82523d6000602084013e610811565b606091505b5091505080806020019051602081101561082a57600080fd5b50519150505b90505b90565b6008546001600160a01b031681565b736b175474e89094c44da98b954eedeac495271d0f81565b60005462010000900460ff1681565b60005460ff1681565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b60038201805463ffffffff191660e09290921c91909117905590565b600282018054600181018255600091825260209091206001600160a01b039290921691015590565b61063b8282610b25565b806001600160a01b0316826001600160a01b03161461063b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051808060200182810382526025815260200180612bd86025913960400191505060405180910390a1604080516001600160a01b0383166020820152818152600a81830152690808115e1c1958dd195960b21b606082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a1604080516001600160a01b0384166020820152818152600a8183015269080808081058dd1d585b60b21b606082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a161063b610ff7565b80821461063b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051808060200182810382526022815260200180612b186022913960400191505060405180910390a16040805160208101839052818152600a81830152690808115e1c1958dd195960b21b606082015290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16040805160208101849052818152600a8183015269080808081058dd1d585b60b21b606082015290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a161063b610ff7565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b151590565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460609390929091830182828015610b9657602002820191906000526020600020905b815481526020019060010190808311610b82575b50505050509050606083610ba9836111d0565b60405160200180836001600160e01b0319166001600160e01b031916815260040182805190602001908083835b60208310610bf55780518252601f199092019160209182019101610bd6565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529050866001016000866001600160a01b03166001600160a01b031681526020019081526020016000206000856001600160e01b0319166001600160e01b03191681526020019081526020016000206000838560405160200180838051906020019060200280838360005b83811015610cac578181015183820152602001610c94565b505050509190910192835250506040805180830381526020928301825280519083012084529083019390935250016000205460ff16610cf057610cee8761125d565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051855191928492879289929081019182918581019102808383895b83811015610d4f578181015183820152602001610d37565b50505050905001828152602001925050506040516020818303038152906040528051906020012081526020019081526020016000205460001b905060006060876001600160a01b0316846040518082805190602001908083835b60208310610dc85780518252601f199092019160209182019101610da9565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610e28576040519150601f19603f3d011682016040523d82523d6000602084013e610e2d565b606091505b50915050610e3e81876020026123b9565b604080516e6865766d20636865617420636f646560881b8152815190819003600f018120630667f9d760e41b82526001600160a01b038c8116600484015260248301889052925193955060009450919091169163667f9d709160448082019260209290919082900301818787803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b505050506040513d6020811015610ee257600080fd5b50519050818114610f245760405162461bcd60e51b815260040180806020018281038252606f815260200180612b69606f913960800191505060405180910390fd5b604080516e6865766d20636865617420636f646560881b8152815190819003600f0181206370ca10bb60e01b82526001600160a01b038b8116600484015260248301879052604483018d905292519216916370ca10bb9160648082019260009290919082900301818387803b158015610f9c57600080fd5b505af1158015610fb0573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055610fe360028b016000612425565b896004016000905550505050505050505050565b610fff610b0a565b156111bf57604080516e6865766d20636865617420636f646560881b808252825191829003600f90810183207f73746f726528616464726573732c627974657333322c627974657333322900008452845193849003601e01842092845284519384900390910183206001600160a01b039081166020808601919091526519985a5b195960d21b85870152600160608681019190915286518087039091018152608086019096526001600160e01b0319841660a08601908152865160009793909416959293909260a401918401908083835b602083106110ef5780518252601f1990920191602091820191016110d0565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040526040518082805190602001908083835b602083106111535780518252601f199092019160209182019101611134565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146111b5576040519150601f19603f3d011682016040523d82523d6000602084013e6111ba565b606091505b505050505b6000805461ff001916610100179055565b606080825160200267ffffffffffffffff811180156111ee57600080fd5b506040519080825280601f01601f191660200182016040528015611219576020820181803683370190505b50905060005b835181101561125457600084828151811061123657fe5b6020908102919091018101518382028501909101525060010161121f565b5090505b919050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949360609391929091908301828280156112ce57602002820191906000526020600020905b8154815260200190600101908083116112ba575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090518651969750909592945086935087929082019182918186019102808383895b83811015611339578181015183820152602001611321565b505050509190910192835250506040805180830381526020928301825280519083012084529083019390935250016000205460ff1615611411576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905184519193928592879282019182918582019102808383895b838110156113d05781810151838201526020016113b8565b505050509050018281526020019250505060405160208183030381529060405280519060200120815260200190815260200160002054945050505050611258565b60608361141d836111d0565b60405160200180836001600160e01b0319166001600160e01b031916815260040182805190602001908083835b602083106114695780518252601f19909201916020918201910161144a565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905060405180806e6865766d20636865617420636f646560881b815250600f019050604051809103902060001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561150557600080fd5b505af1158015611519573d6000803e3d6000fd5b5050505060006060866001600160a01b0316836040518082805190602001908083835b6020831061155b5780518252601f19909201916020918201910161153c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146115bb576040519150601f19603f3d011682016040523d82523d6000602084013e6115c0565b606091505b509150506115d181866020026123b9565b604080516e6865766d20636865617420636f646560881b8152815190819003600f0181206365bc948160e01b82526001600160a01b038b8116600484015292519395506060945091909116916365bc94819160248082019260009290919082900301818387803b15801561164457600080fd5b505af1158015611658573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561168157600080fd5b81019080805160405193929190846401000000008211156116a157600080fd5b9083019060208201858111156116b657600080fd5b82518660208202830111640100000000821117156116d357600080fd5b82525081516020918201928201910280838360005b838110156117005781810151838201526020016116e8565b505050509050016040526020018051604051939291908464010000000082111561172957600080fd5b90830190602082018581111561173e57600080fd5b825186602082028301116401000000008211171561175b57600080fd5b82525081516020918201928201910280838360005b83811015611788578181015183820152602001611770565b50505050905001604052505050509050805160011415611b2a57600060405180806e6865766d20636865617420636f646560881b815250600f019050604051809103902060001c6001600160a01b031663667f9d7089846000815181106117eb57fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561184257600080fd5b505af1158015611856573d6000803e3d6000fd5b505050506040513d602081101561186c57600080fd5b50519050806118cf577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106118a457fe5b602090810291909101810151604080516001600160a01b039094168452918301528051918290030190a15b80831461190d5760405162461bcd60e51b815260040180806020018281038252606f815260200180612b69606f913960800191505060405180910390fd5b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200180838051906020019060200280838360005b8381101561196257818101518382015260200161194a565b5050505090500182815260200192505050604051602081830303815290604052805190602001208560008151811061199657fe5b602090810291909101810151604080516001600160a01b0390961686526001600160e01b031990941691850191909152838301919091526060830152519081900360800190a1816000815181106119e957fe5b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090518951939491938a928c9281019182918581019102808383895b83811015611a51578181015183820152602001611a39565b5050505091909101928352505060408051808303815260209283018252805190830120845283820194909452918301600090812094909455506001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925189519194928a928c9282019182918582019102808383895b83811015611ae4578181015183820152602001611acc565b50505050919091019283525050604080518083038152602092830182528051908301208452908301939093525001600020805460ff191691151591909117905550612212565b6001815111156121db5760005b81518110156121d557600060405180806e6865766d20636865617420636f646560881b815250600f019050604051809103902060001c6001600160a01b031663667f9d708a858581518110611b8857fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015611bdf57600080fd5b505af1158015611bf3573d6000803e3d6000fd5b505050506040513d6020811015611c0957600080fd5b5051905080611c6b577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611c4057fe5b602090810291909101810151604080516001600160a01b039094168452918301528051918290030190a15b60405180806e6865766d20636865617420636f646560881b815250600f019050604051809103902060001c6001600160a01b03166370ca10bb8a858581518110611cb157fe5b602002602001015161133760f01b6040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b031681526020018381526020018281526020019350505050600060405180830381600087803b158015611d1557600080fd5b505af1158015611d29573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040518082805190602001908083835b60208310611d6b5780518252601f199092019160209182019101611d4c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611dcb576040519150601f19603f3d011682016040523d82523d6000602084013e611dd0565b606091505b509092509050611de38160208b026123b9565b9550818015611df6575061133760f01b86145b15612109577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200180838051906020019060200280838360005b83811015611e50578181015183820152602001611e38565b505050509050018281526020019250505060405160208183030381529060405280519060200120888881518110611e8357fe5b602090810291909101810151604080516001600160a01b0390961686526001600160e01b031990941691850191909152838301919091526060830152519081900360800190a1848481518110611ed557fe5b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090518c51939491938d928f9281019182918581019102808383895b83811015611f3d578181015183820152602001611f25565b50505050905001828152602001925050506040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200180838051906020019060200280838360005b83811015611ff8578181015183820152602001611fe0565b505050509050018281526020019250505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060405180806e6865766d20636865617420636f646560881b815250600f019050604051809103902060001c6001600160a01b03166370ca10bb8c87878151811061208a57fe5b6020026020010151866040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b031681526020018381526020018281526020019350505050600060405180830381600087803b1580156120e957600080fd5b505af11580156120fd573d6000803e3d6000fd5b505050505050506121d5565b60405180806e6865766d20636865617420636f646560881b815250600f019050604051809103902060001c6001600160a01b03166370ca10bb8c87878151811061214f57fe5b6020026020010151866040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b031681526020018381526020018281526020019350505050600060405180830381600087803b1580156121ae57600080fd5b505af11580156121c2573d6000803e3d6000fd5b505060019095019450611b379350505050565b50612212565b60405162461bcd60e51b8152600401808060200182810382526040815260200180612ad86040913960400191505060405180910390fd5b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051875191939288928a9282019182918582019102808383895b8381101561227357818101518382015260200161225b565b505050509190910192835250506040805180830381526020928301825280519083012084529083019390935250016000205460ff166122e35760405162461bcd60e51b815260040180806020018281038252602f815260200180612b3a602f913960400191505060405180910390fd5b6005890180546001600160a01b031916905560038901805463ffffffff1916905561231260028a016000612425565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051875191939288928a9282019182918582019102808383895b8381101561237557818101518382015260200161235d565b505050509050018281526020019250505060405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116123ce5784516123d1565b60205b905060005b8181101561240e578060080286828701815181106123f057fe5b01602001516001600160f81b031916901c92909217916001016123d6565b5090949350505050565b61067b8061245d83390190565b50805460008255906000526020600020908101906102c3919061083391905b808211156124585760008155600101612444565b509056fe6080604052600080546001600160a01b0319908116737a250d5630b4cf539739df2c5dacb4c659f2488d17909155600180548216736b175474e89094c44da98b954eedeac495271d0f1790556002805490911673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4817905534801561007657600080fd5b506105f5806100866000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b0f479a11161005b578063b0f479a1146101cd578063b8239ebb146101d5578063c08237311461027f578063e0bab4c4146102875761007d565b80634ba9837a1461008257806389a302711461009c57806390f11e84146100c0575b600080fd5b61008a61028f565b60408051918252519081900360200190f35b6100a4610311565b604080516001600160a01b039092168252519081900360200190f35b61017d600480360360a08110156100d657600080fd5b8135916020810135918101906060810160408201356401000000008111156100fd57600080fd5b82018360208201111561010f57600080fd5b8035906020019184602083028401116401000000008311171561013157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b038335169350505060200135610329565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101b95781810151838201526020016101a1565b505050509050019250505060405180910390f35b6100a4610540565b61008a600480360360408110156101eb57600080fd5b8135919081019060408101602082013564010000000081111561020d57600080fd5b82018360208201111561021f57600080fd5b8035906020019184602083028401116401000000008311171561024157600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061054f945050505050565b61008a610557565b6100a46105a7565b600254604080516370a0823160e01b8152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156102df57600080fd5b505afa1580156102f3573d6000803e3d6000fd5b505050506040513d602081101561030957600080fd5b505191505090565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6060806000809054906101000a90046001600160a01b03166001600160a01b03166338ed173988888888886040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156103cd5781810151838201526020016103b5565b505050509050019650505050505050600060405180830381600087803b1580156103f657600080fd5b505af115801561040a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561043357600080fd5b810190808051604051939291908464010000000082111561045357600080fd5b90830190602082018581111561046857600080fd5b825186602082028301116401000000008211171561048557600080fd5b82525081516020918201928201910280838360005b838110156104b257818101518382015260200161049a565b5050505090500160405250505090507ff418019dfbe64c746fd6c175468f82f58e9e5ade271fc08ce7312e7109a2e770816040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561052357818101518382015260200161050b565b505050509050019250505060405180910390a15095945050505050565b6000546001600160a01b031690565b600092915050565b600154604080516370a0823160e01b8152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156102df57600080fd5b736b175474e89094c44da98b954eedeac495271d0f8156fea2646970667358221220089f13f34fd279c1db8100fd82ff0b8095054c86a325dd28ceb5fdf4d4cd8bb864736f6c6343000606003373746453746f726167652066696e642853746453746f72616765293a204e6f2073746f726167652075736520646574656374656420666f72207461726765742e4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e745d73746453746f726167652066696e642853746453746f72616765293a20536c6f74287329206e6f7420666f756e642e73746453746f726167652066696e642853746453746f72616765293a205061636b656420736c6f742e205468697320776f756c642063617573652064616e6765726f7573206f76657277726974696e6720616e642063757272656e746c792069736e277420737570706f727465642e4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464726573735da2646970667358221220e9787604e39bf83ad6e355149ac99591eefa2f0fea363eb959d5a332d80a889564736f6c63430006060033",
    "sourceMap": "146:1976:12:-:0;;;1572:26:1;;;-1:-1:-1;;;;1572:26:1;;;1594:4;1572:26;170:28:2;;;;;146:1976:12;2:2:-1;;;;27:1;24;17:12;2:2;146:1976:12;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "146:1976:12:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;146:1976:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;421:572:12;;;:::i;:::-;;1332:180;;;:::i;321:38:2:-;;;:::i;:::-;;;;-1:-1:-1;;;;;321:38:2;;;;;;;;;;;;;;1520:493:12;;;:::i;341:73::-;;;:::i;999:327::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;225:31:12;;;:::i;263:72::-;;;:::i;170:28:2:-;;;:::i;1572:26:1:-;;;:::i;421:572:12:-;470:17;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;455:12:12;:32;;-1:-1:-1;;;;;;455:32:12;-1:-1:-1;;;;;455:32:12;;;;;;;;518:217;;723:11;;518:177;;681:12;518:132;-1:-1:-1;;;518:42:12;-1:-1:-1;293:42:12;518:28;:42::i;:::-;:91;:132;:91;:132;:::i;:::-;:154;:177;:154;:177;:::i;:::-;:204;:217;:204;:217;:::i;:::-;932:12;;767:219;;974:11;;767:179;;-1:-1:-1;;;;;932:12:12;767:134;-1:-1:-1;;;767:43:12;932:12;372:42;767:43;:28;:43;:::i;:219::-;421:572::o;1332:180::-;1395:12;;:24;;;-1:-1:-1;;;1395:24:12;;;;1371:21;;-1:-1:-1;;;;;1395:12:12;;:22;;:24;;;;;;;;;;;;;;:12;:24;;;2:2:-1;;;;27:1;24;17:12;2:2;1395:24:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1395:24:12;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1395:24:12;;-1:-1:-1;1429:76:12;1395:24;1461:42;1429:8;:76::i;:::-;1332:180;:::o;321:38:2:-;282:28;;;-1:-1:-1;;;282:28:2;;;;;;;;;;;;-1:-1:-1;;;;;250:64:2;321:38;:::o;1520:493:12:-;1626:16;;;1640:1;1626:16;;;1598:25;1626:16;;;;;1598:25;1626:16;;;;;109:14:-1;1626:16:12;88:42:-1;144:17;;-1:-1;1626:16:12;1598:44;;372:42;1652:8;1661:1;1652:11;;;;;;;;;;;;;:27;-1:-1:-1;;;;;1652:27:12;;;-1:-1:-1;;;;;1652:27:12;;;;;293:42;1711:8;1720:1;1711:11;;;;;;;;-1:-1:-1;;;;;1711:26:12;;;:11;;;;;;;;;;:26;;;;1777:12;;:229;;-1:-1:-1;;;1777:229:12;;1810:1;1777:229;;;;;;1838:1;1777:229;;;;;;1922:4;1777:229;;;;;;1975:9;1957:15;:27;1777:229;;;;;;;;;;;;;;;;;;;;;1747:18;;1777:12;;;;;:17;;1810:1;;1838;;1871:8;;1922:4;;1957:27;;1777:229;;;;;;;;;;;;:12;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1777:229:12;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1777:229:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1777:229:12;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1777:229:12;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15:2;7:11;;4:2;;;31:1;28;21:12;4:2;1777:229:12;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;1777:229:12;;421:4:-1;412:14;;;;1777:229:12;;;;;412:14:-1;1777:229:12;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1777:229:12;;;;;;;;;;;1747:259;;1520:493;;:::o;341:73::-;372:42;341:73;:::o;999:327::-;1066:12;;:28;;;-1:-1:-1;;;1066:28:12;;;;1045:18;;-1:-1:-1;;;;;1066:12:12;;:26;;:28;;;;;;;;;;;;;;:12;:28;;;2:2:-1;;;;27:1;24;17:12;2:2;1066:28:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1066:28:12;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1066:28:12;1126:12;;:29;;;-1:-1:-1;;;1126:29:12;;;;1066:28;;-1:-1:-1;1104:19:12;;-1:-1:-1;;;;;1126:12:12;;;;:27;;:29;;;;;1066:28;;1126:29;;;;;;;;:12;:29;;;2:2:-1;;;;27:1;24;17:12;2:2;1126:29:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1126:29:12;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1126:29:12;;-1:-1:-1;1165:44:12;1174:10;1186:22;1165:8;:44::i;:::-;1246:45;1255:11;1268:22;1246:8;:45::i;:::-;999:327;;:::o;1819:584:1:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;1896:14;;1869:528;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;1703:28;;;-1:-1:-1;;;1703:28:1;;;;;;;;;;;;;;;-1:-1:-1;;;2135:34:1;;;;;;;;;;;;1703:28;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:1;;;2196:43;;;;;;;;-1:-1:-1;;;2196:43:1;;;;;;26:21:-1;;;22:32;;6:49;;2023:20:1;2196:43;;;;;;-1:-1:-1;;;;;;2086:175:1;;;;;;;;;;1671:64;;;;;2196:43;;2086:175;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2086:175:1;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2086:175:1;;;2047:232;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2047:232:1;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;2020:259:1;;;2323:7;2312:27;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2312:27:1;;-1:-1:-1;;1980:374:1;2374:12;-1:-1:-1;1869:528:1;1819:584;:::o;225:31:12:-;;;-1:-1:-1;;;;;225:31:12;;:::o;263:72::-;293:42;263:72;:::o;170:28:2:-;;;;;;;;;:::o;1572:26:1:-;;;;;;:::o;32086:156:4:-;32192:12;;;:22;;-1:-1:-1;;;;;;32192:22:4;-1:-1:-1;;;;;32192:22:4;;;;;;;;;;:12;32086:156::o;32248:143::-;32347:9;;;:16;;-1:-1:-1;;32347:16:4;;;;;;;;;;;;:9;32248:143::o;32559:179::-;32663:10;;;27::-1;;39:1;23:18;;45:23;;-1:-1;32663:47:4;;;;;;;-1:-1:-1;;;;;32687:21:4;;;;32663:47;;;:10;32559:179::o;33370:120::-;33450:33;33464:4;33478:3;33450:13;:33::i;3615:277:1:-;3683:1;-1:-1:-1;;;;;3678:6:1;:1;-1:-1:-1;;;;;3678:6:1;;3674:212;;3705:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3768:34;;;-1:-1:-1;;;;;3768:34:1;;;;;;;;;;;;;;-1:-1:-1;;;3768:34:1;;;;;;;;;;;;;;;3821;;;-1:-1:-1;;;;;3821:34:1;;;;;;;;;;;;;;-1:-1:-1;;;3821:34:1;;;;;;;;;;;;;;;3869:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5346:31;;;;;;;;;;;;;;;;;-1:-1:-1;;;5346:31:1;;;;;;;;;;;;;;;5396;;;;;;;;;;;;;;;;;-1:-1:-1;;;5396:31:1;;;;;;;;;;;;;;;5441:6;:4;:6::i;2840:242::-;2990:42;2978:55;3059:16;;2840:242;:::o;33724:1089:4:-;33840:12;;;;33876:9;;;;33917:11;;;;33961:10;;;33938:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;33840:12:4;;;;33876:9;;;;;;33938:20;;:33;;33961:10;;33938:33;;33961:10;33938:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33982:17;34019:4;34025:12;34033:3;34025:7;:12::i;:::-;34002:36;;;;;;-1:-1:-1;;;;;34002:36:4;;-1:-1:-1;;;;;34002:36:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;34002:36:4;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34002:36:4;;;33982:56;;34053:4;:10;;:15;34064:3;-1:-1:-1;;;;;34053:15:4;-1:-1:-1;;;;;34053:15:4;;;;;;;;;;;;:21;34069:4;-1:-1:-1;;;;;34053:21:4;;-1:-1:-1;;;;;34053:21:4;;;;;;;;;;;;;:68;34102:3;34107:11;34085:34;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;34085:34:4;;;;;;;-1:-1:-1;;34085:34:4;;;26:21:-1;;;6:49;;34085:34:4;;;;;;34075:45;;;;;;34053:68;;;;;;;;;-1:-1:-1;34053:68:4;22:32:-1;34053:68:4;;;;34048:110;;34137:10;34142:4;34137;:10::i;:::-;;34048:110;-1:-1:-1;;;;;34190:15:4;;34167:12;34190:15;;;;;;;;;;;-1:-1:-1;;;;;;34190:21:4;;;;;;;;;34222:34;;;;34190:21;;34167:12;;34239:3;;34244:11;;34222:34;;;;;;;;;;;;;;34167:12;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;34222:34:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;34222:34:4;;;34212:45;;;;;;34190:68;;;;;;;;;;;;34182:77;;34167:92;;34270:12;34309:17;34330:3;-1:-1:-1;;;;;34330:14:4;34345:4;34330:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;34330:20:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;34306:44:4;;;34371:36;34386:4;34395:11;34392:2;:14;34371;:36::i;:::-;28148:28;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;-1:-1:-1;;;34442:28:4;;-1:-1:-1;;;;;34442:28:4;;;;;;;;;;;;;;;34364:43;;-1:-1:-1;34427:12:4;;-1:-1:-1;34442:17:4;;;;;;;:28;;;;;;;;;;;;;;;34427:12;34442:17;:28;;;2:2:-1;;;;27:1;24;17:12;2:2;34442:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34442:28:4;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;34442:28:4;;-1:-1:-1;34485:12:4;;;34481:172;;34513:129;;-1:-1:-1;;;34513:129:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28148:28;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;-1:-1:-1;;;34662:34:4;;-1:-1:-1;;;;;34662:34:4;;;;;;;;;;;;;;;;;;;;;:18;;;;;:34;;;;;28140:37;;34662:34;;;;;;;;28140:37;34662:18;:34;;;2:2:-1;;;;27:1;24;17:12;2:2;34662:34:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;34713:12:4;;;34706:19;;-1:-1:-1;;;;;;34706:19:4;;;-1:-1:-1;34742:9:4;;;34735:16;;-1:-1:-1;;34735:16:4;;;34761:17;-1:-1:-1;34768:10:4;;34713:12;34761:17;:::i;:::-;34795:4;:11;;34788:18;;;33724:1089;;;;;;;;;;:::o;2410:424:1:-;2449:16;:14;:16::i;:::-;2445:359;;;1703:28;;;-1:-1:-1;;;1703:28:1;;;;;;;;;;;;;;;2579:43;;;;;;;;;;;;;1703:28;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:1;;;2645:67;;;;;;;;-1:-1:-1;;;2645:67:1;;;;2705:4;1679:55;2645:67;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2645:67:1;;;;;;-1:-1:-1;;;;;;2534:196:1;;;;;;;;;;2482:11;;1671:64;;;;;2645:67;;2534:196;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2534:196:1;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2534:196:1;;;2499:245;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2499:245:1;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;;;;2445:359:1;2813:7;:14;;-1:-1:-1;;2813:14:1;;;;;2410:424::o;36157:397:4:-;36216:12;36244:19;36276:1;:8;36287:2;36276:13;36266:24;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;36266:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;108:14;36266:24:4;87:42:-1;143:17;;-1:-1;36266:24:4;-1:-1:-1;36244:46:4;-1:-1:-1;36305:9:4;36300:224;36324:1;:8;36320:1;:12;36300:224;;;36353:9;36365:1;36367;36365:4;;;;;;;;;;;;;;;;;;;36484:10;;;36464:32;;;;;36457:43;-1:-1:-1;36334:3:4;;36300:224;;;-1:-1:-1;36541:6:4;-1:-1:-1;36157:397:4;;;;:::o;28866:3214::-;28990:12;;;;29026:9;;;;29067:11;;;;29111:10;;;29088:33;;;;;;;;;;;;;;;;;;;28953:7;;-1:-1:-1;;;;;28990:12:4;;29026:9;;;29067:11;29088:20;;:33;;29111:10;;29088:33;;;29111:10;29088:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;29172:15:4;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;29172:21:4;;;;;;;;;29204:34;;;;29088:33;;-1:-1:-1;29172:21:4;;:15;;-1:-1:-1;29088:33:4;;-1:-1:-1;29226:11:4;;29204:34;;;;;;;;;;;;;;29172:15;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;29204:34:4;;;;;;;-1:-1:-1;;29204:34:4;;;26:21:-1;;;6:49;;29204:34:4;;;;;;29194:45;;;;;;29172:68;;;;;;;;;-1:-1:-1;29172:68:4;22:32:-1;29172:68:4;;;;29168:174;;;-1:-1:-1;;;;;29263:15:4;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;29263:21:4;;;;;;;;;29295:34;;;;29263:21;;:10;29312:3;;29317:11;;29295:34;;;;;;;;;;;;;29263:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;29295:34:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;29295:34:4;;;29285:45;;;;;;29263:68;;;;;;;;;;;;29256:75;;;;;;;;29168:174;29351:17;29388:4;29394:12;29402:3;29394:7;:12::i;:::-;29371:36;;;;;;-1:-1:-1;;;;;29371:36:4;;-1:-1:-1;;;;;29371:36:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;29371:36:4;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;29371:36:4;;;29351:56;;28148:28;;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;;;28140:37;;-1:-1:-1;;;;;29417:19:4;;:21;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;29417:21:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29417:21:4;;;;29448:12;29487:17;29508:3;-1:-1:-1;;;;;29508:14:4;29523:4;29508:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;29508:20:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;29484:44:4;;;29549:36;29564:4;29573:11;29570:2;:14;29549;:36::i;:::-;28148:28;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;-1:-1:-1;;;29635:35:4;;-1:-1:-1;;;;;29635:35:4;;;;;;;;;29542:43;;-1:-1:-1;29607:22:4;;-1:-1:-1;29635:21:4;;;;;;;:35;;;;;28140:37;;29635:35;;;;;;;;28140:37;29635:21;:35;;;2:2:-1;;;;27:1;24;17:12;2:2;29635:35:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29635:35:4;;;;;;39:16:-1;36:1;17:17;2:54;101:4;29635:35:4;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;;;7:11;;4:2;;;31:1;28;21:12;4:2;29635:35:4;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;29635:35:4;;421:4:-1;412:14;;;;29635:35:4;;;;;412:14:-1;29635:35:4;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;29635:35:4;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;29635:35:4;;421:4:-1;412:14;;;;29635:35:4;;;;;412:14:-1;29635:35:4;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;29635:35:4;;;;;;;;;;;29606:64;;;29684:5;:12;29700:1;29684:17;29680:2058;;;29717:12;28148:28;;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;;;28140:37;;-1:-1:-1;;;;;29732:17:4;;29750:3;29755:5;29761:1;29755:8;;;;;;;;;;;;;;29732:32;;;;;;;;;;;;;-1:-1:-1;;;;;29732:32:4;-1:-1:-1;;;;;29732:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;29732:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29732:32:4;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;29732:32:4;;-1:-1:-1;29782:18:4;29778:106;;29825:44;29846:3;29859:5;29865:1;29859:8;;;;;;;;;;;;;;;;;;;29825:44;;;-1:-1:-1;;;;;29825:44:4;;;;;;;;;;;;;;;;;;29778:106;29909:4;29901;:12;29897:180;;29933:129;;-1:-1:-1;;;29933:129:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30095:86;30105:3;30110:4;30143:3;30148:11;30126:34;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;30126:34:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;30126:34:4;;;30116:45;;;;;;30171:5;30177:1;30171:8;;;;;;;;;;;;;;;;;;;30095:86;;;-1:-1:-1;;;;;30095:86:4;;;;;-1:-1:-1;;;;;;30095:86:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30274:5;30280:1;30274:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30195:15:4;;30266:17;30195:15;;;;;;;;;;-1:-1:-1;;;;;;30195:21:4;;;;;;;;;30227:34;;;;30274:8;;30195:21;;30244:3;;30249:11;;30227:34;;;;;;;;;;;;;30266:17;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;30227:34:4;;;;;;;-1:-1:-1;;30227:34:4;;;26:21:-1;;;6:49;;30227:34:4;;;;;;30217:45;;;;;;30195:68;;;;;;;;;;;;22:32:-1;30195:68:4;;;:88;;;;-1:-1:-1;;;;;;30297:15:4;;;;30368:4;30297:10;;;:15;;;;;-1:-1:-1;;;;;;30297:21:4;;;;;;;;;30329:34;;;;30368:4;;22:32:-1;30346:3:4;;30351:11;;30329:34;;;;;;;;;;;;;22:32:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;30329:34:4;;;;;;;-1:-1:-1;;30329:34:4;;;26:21:-1;;;6:49;;30329:34:4;;;;;;30319:45;;;;;;30297:68;;;;;;;;;-1:-1:-1;30297:68:4;-1:-1:-1;30297:68:4;:75;;-1:-1:-1;;30297:75:4;;;;;;;;;;-1:-1:-1;29680:2058:4;;;30408:1;30393:5;:12;:16;30389:1349;;;30430:9;30425:1190;30449:5;:12;30445:1;:16;30425:1190;;;30486:12;28148:28;;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;;;28140:37;;-1:-1:-1;;;;;30501:17:4;;30519:3;30524:5;30530:1;30524:8;;;;;;;;;;;;;;30501:32;;;;;;;;;;;;;-1:-1:-1;;;;;30501:32:4;-1:-1:-1;;;;;30501:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;30501:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30501:32:4;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;30501:32:4;;-1:-1:-1;30555:18:4;30551:114;;30602:44;30623:3;30636:5;30642:1;30636:8;;;;;;;;;;;;;;;;;;;30602:44;;;-1:-1:-1;;;;;30602:44:4;;;;;;;;;;;;;;;;;;30551:114;28148:28;;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;;;28140:37;;-1:-1:-1;;;;;30707:18:4;;30726:3;30731:5;30737:1;30731:8;;;;;;;;;;;;;;-1:-1:-1;;;30707:53:4;;;;;;;;;;;;;-1:-1:-1;;;;;30707:53:4;-1:-1:-1;;;;;30707:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;30707:53:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30707:53:4;;;;30778:12;30808:17;30883:3;-1:-1:-1;;;;;30883:14:4;30898:4;30883:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;30883:20:4;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;30865:38:4;;-1:-1:-1;30865:38:4;-1:-1:-1;30932:36:4;30865:38;30953:2;:14;;30932;:36::i;:::-;30925:43;;31009:7;:37;;;;;-1:-1:-1;;;31020:4:4;:26;31009:37;31005:539;;;31144:86;31154:3;31159:4;31192:3;31197:11;31175:34;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;31175:34:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;31175:34:4;;;31165:45;;;;;;31220:5;31226:1;31220:8;;;;;;;;;;;;;;;;;;;31144:86;;;-1:-1:-1;;;;;31144:86:4;;;;;-1:-1:-1;;;;;;31144:86:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31331:5;31337:1;31331:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31252:15:4;;31323:17;31252:15;;;;;;;;;;-1:-1:-1;;;;;;31252:21:4;;;;;;;;;31284:34;;;;31331:8;;31252:21;;31301:3;;31306:11;;31284:34;;;;;;;;;;;;;31323:17;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;31284:34:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;31284:34:4;;;31274:45;;;;;;31252:68;;;;;;;;;;;:88;;;;31433:4;31362;:10;;:15;31373:3;-1:-1:-1;;;;;31362:15:4;-1:-1:-1;;;;;31362:15:4;;;;;;;;;;;;:21;31378:4;-1:-1:-1;;;;;31362:21:4;;-1:-1:-1;;;;;31362:21:4;;;;;;;;;;;;;:68;31411:3;31416:11;31394:34;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;31394:34:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;31394:34:4;;;31384:45;;;;;;31362:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;28148:28;;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;;;28140:37;;-1:-1:-1;;;;;31459:18:4;;31478:3;31483:5;31489:1;31483:8;;;;;;;;;;;;;;31493:4;31459:39;;;;;;;;;;;;;-1:-1:-1;;;;;31459:39:4;-1:-1:-1;;;;;31459:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;31459:39:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31459:39:4;;;;31520:5;;;;;31005:539;28148:28;;;;-1:-1:-1;;;28148:28:4;;;;;;;;;;;;;;28140:37;;-1:-1:-1;;;;;31561:18:4;;31580:3;31585:5;31591:1;31585:8;;;;;;;;;;;;;;31595:4;31561:39;;;;;;;;;;;;;-1:-1:-1;;;;;31561:39:4;-1:-1:-1;;;;;31561:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;31561:39:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;30463:3:4;;;;;-1:-1:-1;30425:1190:4;;-1:-1:-1;;;;30425:1190:4;;;30389:1349;;;31645:82;;-1:-1:-1;;;31645:82:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31756:15:4;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;31756:21:4;;;;;;;;;31788:34;;;;31756:21;;:15;31805:3;;31810:11;;31788:34;;;;;;;;;;;;;31756:15;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;31788:34:4;;;;;;;-1:-1:-1;;31788:34:4;;;26:21:-1;;;6:49;;31788:34:4;;;;;;31778:45;;;;;;31756:68;;;;;;;;;-1:-1:-1;31756:68:4;22:32:-1;31756:68:4;;;;31748:128;;;;-1:-1:-1;;;31748:128:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31894:12;;;31887:19;;-1:-1:-1;;;;;;31887:19:4;;;31923:9;;;31916:16;;-1:-1:-1;;31916:16:4;;;31942:17;-1:-1:-1;31949:10:4;;31894:12;31942:17;:::i;:::-;31969:18;31976:11;;;31969:18;;;-1:-1:-1;;;;;32005:15:4;;;;;;;;;;;;-1:-1:-1;;;;;;32005:21:4;;;;;;;;;32037:34;;;;32005:21;;31969:18;32054:3;;32059:11;;32037:34;;;;;;;;;;;;;31969:18;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;32037:34:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;32037:34:4;;;32027:45;;;;;;32005:68;;;;;;;;;;;;31998:75;;;;;;;;;28866:3214;;;:::o;35854:297::-;35928:7;35947:11;35969;35994:2;35983:1;:8;:13;:29;;36004:1;:8;35983:29;;;35999:2;35983:29;35969:43;-1:-1:-1;36027:6:4;36022:103;36043:3;36039:1;:7;36022:103;;;36108:1;36112;36108:5;36082:1;36093;36084:6;:10;36082:13;;;;;;;;;;;;-1:-1:-1;;;;;;36082:13:4;36074:40;;36067:47;;;;;36048:3;;36022:103;;;-1:-1:-1;36141:3:4;;35854:297;-1:-1:-1;;;;35854:297:4:o;146:1976:12:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DAI()": "e0bab4c4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "USDC()": "89a30271",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testContract()": "c36631b4",
    "testRouter()": "1afd7ba7",
    "testSwap()": "6e008a03",
    "testTokenBalances()": "b6f8657c",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testContract\",\"outputs\":[{\"internalType\":\"contract UniswapTest\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"test/UniswapTest.t.sol\":\"UniswapTestTester\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@uniswap/v2-core/=lib/v2-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":v2-core/=lib/v2-core/contracts/\",\":v2-periphery/=lib/v2-periphery/contracts/\"]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xadb37d03f2b1abafde55ee0b1b3b4bb5a90c91e3c451fa495d5e97b8a7c59a61\",\"urls\":[\"bzz-raw://aadd007d931ff4605d7799e0ba03fe54722c351c7d70b10cac829d911f226d05\",\"dweb:/ipfs/QmZdUWCzbaiZyfNNTsxBNuruBCigUWBpCr5xBPRDKgde7o\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.Sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1d562fd52631c5a4ca16e6befa43e66e443aa6b165c6b646ac2aa69974f94f56\",\"urls\":[\"bzz-raw://16b4df99f5a54dde8090a1b97ffd53fd09afe44b496e7e46a64d24e7fb6fb2bd\",\"dweb:/ipfs/QmP5zKDXnHq24WE4K2u6gYdLnh2FBropJAdzzDxpZqW231\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"lib/v2-periphery/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x27f0ea82f879b3b01387b583e6d9d0ec858dca3b22b0aad173f8fbda06e761e1\",\"urls\":[\"bzz-raw://0db9cf37793eb7035f0bfced36323d240f0212150009c39a3a108701d9b50b6c\",\"dweb:/ipfs/QmUAdiG9XNcieXkKfiMB49zQqD34FbXFE15csV2KQzwEqg\"]},\"lib/v2-periphery/contracts/libraries/UniswapV2Library.sol\":{\"keccak256\":\"0x2e125bac8733dde3c937e4245f15dcd56633a1aecf5d7760ba2018e9e374f378\",\"urls\":[\"bzz-raw://f66af240fea54958cc87dc5dadc1fd36531d06666adf32330a0c78b8a1c6dea8\",\"dweb:/ipfs/QmU7Sg5LEkuCVqFNpMBt1Txpfv3ucG3H4QBaMVqtL5bYMp\"]},\"src/UniswapTest.sol\":{\"keccak256\":\"0x848aab43bd426b6121b310aff22729c59999658b8dba9eaab271c2d4034fa3da\",\"urls\":[\"bzz-raw://7ca57b3c1fb27adefd36a9eefd92ca8533f9fedca376328c9c0e247f0c5a7cc9\",\"dweb:/ipfs/QmNmXbxCfVLtxBchiPz88qVmS8CpBVGq6wtuEMWDeZKVQg\"]},\"test/UniswapTest.t.sol\":{\"keccak256\":\"0x014c56ace2a5491a74ab87444459e4263cd6ea817819ac92251c93593a285bc6\",\"urls\":[\"bzz-raw://ffe700fabf20fd3c721aa132b41ada09b6fd6bb86b253148d1c25c8b0b8f5c84\",\"dweb:/ipfs/QmUd3WKsWCCZYFUtRFzo8KCMFqNNXTKFDMBXDzq18AdaKt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.6+commit.6c089d02"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testContract",
          "outputs": [
            {
              "internalType": "contract UniswapTest",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRouter"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSwap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenBalances"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "methods": {}
      },
      "userdoc": {
        "methods": {}
      }
    },
    "settings": {
      "remappings": [
        ":@uniswap/v2-core/=lib/v2-core/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":v2-core/=lib/v2-core/contracts/",
        ":v2-periphery/=lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/UniswapTest.t.sol": "UniswapTestTester"
      },
      "libraries": {}
    },
    "sources": {
      "interfaces/IERC20.sol": {
        "keccak256": "0xadb37d03f2b1abafde55ee0b1b3b4bb5a90c91e3c451fa495d5e97b8a7c59a61",
        "urls": [
          "bzz-raw://aadd007d931ff4605d7799e0ba03fe54722c351c7d70b10cac829d911f226d05",
          "dweb:/ipfs/QmZdUWCzbaiZyfNNTsxBNuruBCigUWBpCr5xBPRDKgde7o"
        ],
        "license": null
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": null
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": null
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": null
      },
      "lib/forge-std/src/Test.Sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": null
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1d562fd52631c5a4ca16e6befa43e66e443aa6b165c6b646ac2aa69974f94f56",
        "urls": [
          "bzz-raw://16b4df99f5a54dde8090a1b97ffd53fd09afe44b496e7e46a64d24e7fb6fb2bd",
          "dweb:/ipfs/QmP5zKDXnHq24WE4K2u6gYdLnh2FBropJAdzzDxpZqW231"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": null
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": null
      },
      "lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b",
        "urls": [
          "bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf",
          "dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH"
        ],
        "license": null
      },
      "lib/v2-periphery/contracts/libraries/SafeMath.sol": {
        "keccak256": "0x27f0ea82f879b3b01387b583e6d9d0ec858dca3b22b0aad173f8fbda06e761e1",
        "urls": [
          "bzz-raw://0db9cf37793eb7035f0bfced36323d240f0212150009c39a3a108701d9b50b6c",
          "dweb:/ipfs/QmUAdiG9XNcieXkKfiMB49zQqD34FbXFE15csV2KQzwEqg"
        ],
        "license": null
      },
      "lib/v2-periphery/contracts/libraries/UniswapV2Library.sol": {
        "keccak256": "0x2e125bac8733dde3c937e4245f15dcd56633a1aecf5d7760ba2018e9e374f378",
        "urls": [
          "bzz-raw://f66af240fea54958cc87dc5dadc1fd36531d06666adf32330a0c78b8a1c6dea8",
          "dweb:/ipfs/QmU7Sg5LEkuCVqFNpMBt1Txpfv3ucG3H4QBaMVqtL5bYMp"
        ],
        "license": null
      },
      "src/UniswapTest.sol": {
        "keccak256": "0x848aab43bd426b6121b310aff22729c59999658b8dba9eaab271c2d4034fa3da",
        "urls": [
          "bzz-raw://7ca57b3c1fb27adefd36a9eefd92ca8533f9fedca376328c9c0e247f0c5a7cc9",
          "dweb:/ipfs/QmNmXbxCfVLtxBchiPz88qVmS8CpBVGq6wtuEMWDeZKVQg"
        ],
        "license": null
      },
      "test/UniswapTest.t.sol": {
        "keccak256": "0x014c56ace2a5491a74ab87444459e4263cd6ea817819ac92251c93593a285bc6",
        "urls": [
          "bzz-raw://ffe700fabf20fd3c721aa132b41ada09b6fd6bb86b253148d1c25c8b0b8f5c84",
          "dweb:/ipfs/QmUd3WKsWCCZYFUtRFzo8KCMFqNNXTKFDMBXDzq18AdaKt"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/UniswapTest.t.sol",
    "id": 24331,
    "exportedSymbols": {
      "UniswapTestTester": [
        24330
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:2123:12",
    "nodes": [
      {
        "id": 24146,
        "nodeType": "PragmaDirective",
        "src": "0:24:12",
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 24147,
        "nodeType": "ImportDirective",
        "src": "26:28:12",
        "absolutePath": "lib/forge-std/src/Test.Sol",
        "file": "forge-std/Test.Sol",
        "scope": 24331,
        "sourceUnit": 6312,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24148,
        "nodeType": "ImportDirective",
        "src": "55:32:12",
        "absolutePath": "src/UniswapTest.sol",
        "file": "../src/UniswapTest.sol",
        "scope": 24331,
        "sourceUnit": 24145,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24149,
        "nodeType": "ImportDirective",
        "src": "88:34:12",
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "scope": 24331,
        "sourceUnit": 69,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24330,
        "nodeType": "ContractDefinition",
        "src": "146:1976:12",
        "nodes": [
          {
            "id": 24154,
            "nodeType": "UsingForDirective",
            "src": "188:32:12",
            "libraryName": {
              "contractScope": null,
              "id": 24152,
              "name": "stdStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6172,
              "src": "194:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_stdStorage_$6172",
                "typeString": "library stdStorage"
              }
            },
            "typeName": {
              "contractScope": null,
              "id": 24153,
              "name": "StdStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5096,
              "src": "209:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$5096_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 24156,
            "nodeType": "VariableDeclaration",
            "src": "225:31:12",
            "constant": false,
            "functionSelector": "c36631b4",
            "mutability": "mutable",
            "name": "testContract",
            "overrides": null,
            "scope": 24330,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UniswapTest_$24144",
              "typeString": "contract UniswapTest"
            },
            "typeName": {
              "contractScope": null,
              "id": 24155,
              "name": "UniswapTest",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24144,
              "src": "225:11:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UniswapTest_$24144",
                "typeString": "contract UniswapTest"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 24159,
            "nodeType": "VariableDeclaration",
            "src": "263:72:12",
            "constant": true,
            "functionSelector": "e0bab4c4",
            "mutability": "constant",
            "name": "DAI",
            "overrides": null,
            "scope": 24330,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24157,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "263:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 24158,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "293:42:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "id": 24162,
            "nodeType": "VariableDeclaration",
            "src": "341:73:12",
            "constant": true,
            "functionSelector": "89a30271",
            "mutability": "constant",
            "name": "USDC",
            "overrides": null,
            "scope": 24330,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24160,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "341:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 24161,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "372:42:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "public"
          },
          {
            "id": 24232,
            "nodeType": "FunctionDefinition",
            "src": "421:572:12",
            "body": {
              "id": 24231,
              "nodeType": "Block",
              "src": "445:548:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24165,
                      "name": "testContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24156,
                      "src": "455:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniswapTest_$24144",
                        "typeString": "contract UniswapTest"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "470:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UniswapTest_$24144_$",
                          "typeString": "function () returns (contract UniswapTest)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 24166,
                          "name": "UniswapTest",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 24144,
                          "src": "474:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UniswapTest_$24144",
                            "typeString": "contract UniswapTest"
                          }
                        }
                      },
                      "id": 24168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "470:17:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniswapTest_$24144",
                        "typeString": "contract UniswapTest"
                      }
                    },
                    "src": "455:32:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UniswapTest_$24144",
                      "typeString": "contract UniswapTest"
                    }
                  },
                  "id": 24170,
                  "nodeType": "ExpressionStatement",
                  "src": "455:32:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 24198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 24196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "723:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 24197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "730:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "723:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24192,
                                "name": "testContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24156,
                                "src": "681:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UniswapTest_$24144",
                                  "typeString": "contract UniswapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UniswapTest_$24144",
                                  "typeString": "contract UniswapTest"
                                }
                              ],
                              "id": 24191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "673:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24190,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "673:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 24193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "673:21:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 24183,
                                            "name": "DAI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24159,
                                            "src": "625:3:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 24182,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "617:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 24181,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "617:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 24184,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "617:12:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 24180,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68,
                                      "src": "610:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 24185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "610:20:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$68",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 24186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29,
                                  "src": "610:30:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 24187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "610:39:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 24176,
                                        "name": "DAI",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24159,
                                        "src": "555:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 24175,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "547:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 24174,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "547:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 24177,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "547:12:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 24171,
                                    "name": "stdstore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2493,
                                    "src": "518:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StdStorage_$5096_storage",
                                      "typeString": "struct StdStorage storage ref"
                                    }
                                  },
                                  "id": 24173,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5614,
                                  "src": "518:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5096_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$5096_storage_ptr_$bound_to$_t_struct$_StdStorage_$5096_storage_ptr_$",
                                    "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                  }
                                },
                                "id": 24178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "518:42:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$5096_storage_ptr",
                                  "typeString": "struct StdStorage storage pointer"
                                }
                              },
                              "id": 24179,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5632,
                              "src": "518:91:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5096_storage_ptr_$_t_bytes4_$returns$_t_struct$_StdStorage_$5096_storage_ptr_$bound_to$_t_struct$_StdStorage_$5096_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,bytes4) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 24188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "518:132:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$5096_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 24189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "with_key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5681,
                          "src": "518:154:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5096_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$5096_storage_ptr_$bound_to$_t_struct$_StdStorage_$5096_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 24194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "518:177:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$5096_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 24195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5780,
                      "src": "518:204:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5096_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$5096_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 24199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:217:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24200,
                  "nodeType": "ExpressionStatement",
                  "src": "518:217:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 24228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 24226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "974:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 24227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "981:4:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "974:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24222,
                                "name": "testContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24156,
                                "src": "932:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UniswapTest_$24144",
                                  "typeString": "contract UniswapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UniswapTest_$24144",
                                  "typeString": "contract UniswapTest"
                                }
                              ],
                              "id": 24221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "924:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24220,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "924:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 24223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "924:21:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 24213,
                                            "name": "USDC",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24162,
                                            "src": "875:4:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 24212,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "867:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 24211,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "867:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 24214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "867:13:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 24210,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68,
                                      "src": "860:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 24215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "860:21:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$68",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 24216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29,
                                  "src": "860:31:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 24217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "860:40:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 24206,
                                        "name": "USDC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24162,
                                        "src": "804:4:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 24205,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "796:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 24204,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "796:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 24207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "796:13:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 24201,
                                    "name": "stdstore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2493,
                                    "src": "767:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StdStorage_$5096_storage",
                                      "typeString": "struct StdStorage storage ref"
                                    }
                                  },
                                  "id": 24203,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5614,
                                  "src": "767:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5096_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$5096_storage_ptr_$bound_to$_t_struct$_StdStorage_$5096_storage_ptr_$",
                                    "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                  }
                                },
                                "id": 24208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "767:43:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$5096_storage_ptr",
                                  "typeString": "struct StdStorage storage pointer"
                                }
                              },
                              "id": 24209,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5632,
                              "src": "767:92:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5096_storage_ptr_$_t_bytes4_$returns$_t_struct$_StdStorage_$5096_storage_ptr_$bound_to$_t_struct$_StdStorage_$5096_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,bytes4) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 24218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "767:134:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$5096_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 24219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "with_key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5681,
                          "src": "767:156:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5096_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$5096_storage_ptr_$bound_to$_t_struct$_StdStorage_$5096_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 24224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "767:179:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$5096_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 24225,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5780,
                      "src": "767:206:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5096_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$5096_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 24229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:219:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24230,
                  "nodeType": "ExpressionStatement",
                  "src": "767:219:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "overrides": null,
            "parameters": {
              "id": 24163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:12"
            },
            "returnParameters": {
              "id": 24164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:12"
            },
            "scope": 24330,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24258,
            "nodeType": "FunctionDefinition",
            "src": "999:327:12",
            "body": {
              "id": 24257,
              "nodeType": "Block",
              "src": "1035:291:12",
              "statements": [
                {
                  "assignments": [
                    24236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24236,
                      "mutability": "mutable",
                      "name": "balanceDai",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 24257,
                      "src": "1045:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1045:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24240,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24237,
                        "name": "testContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24156,
                        "src": "1066:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapTest_$24144",
                          "typeString": "contract UniswapTest"
                        }
                      },
                      "id": 24238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBalanceDai",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24114,
                      "src": "1066:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 24239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:28:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1045:49:12"
                },
                {
                  "assignments": [
                    24242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24242,
                      "mutability": "mutable",
                      "name": "balanceUsdc",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 24257,
                      "src": "1104:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1104:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24246,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24243,
                        "name": "testContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24156,
                        "src": "1126:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapTest_$24144",
                          "typeString": "contract UniswapTest"
                        }
                      },
                      "id": 24244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBalanceUsdc",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24132,
                      "src": "1126:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 24245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:29:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1104:51:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24248,
                        "name": "balanceDai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24236,
                        "src": "1174:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030303030303030303030303030",
                        "id": 24249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1186:22:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 24247,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3232,
                        3257,
                        3270,
                        3286,
                        3328,
                        3370,
                        3412,
                        3449,
                        3486,
                        3523,
                        389,
                        414,
                        444,
                        469,
                        528,
                        553,
                        583,
                        608,
                        1708,
                        1743
                      ],
                      "referencedDeclaration": 583,
                      "src": "1165:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24251,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24253,
                        "name": "balanceUsdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24242,
                        "src": "1255:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030303030303030303030303030",
                        "id": 24254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1268:22:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 24252,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3232,
                        3257,
                        3270,
                        3286,
                        3328,
                        3370,
                        3412,
                        3449,
                        3486,
                        3523,
                        389,
                        414,
                        444,
                        469,
                        528,
                        553,
                        583,
                        608,
                        1708,
                        1743
                      ],
                      "referencedDeclaration": 583,
                      "src": "1246:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24256,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:45:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6f8657c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenBalances",
            "overrides": null,
            "parameters": {
              "id": 24233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:2:12"
            },
            "returnParameters": {
              "id": 24234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:12"
            },
            "scope": 24330,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24276,
            "nodeType": "FunctionDefinition",
            "src": "1332:180:12",
            "body": {
              "id": 24275,
              "nodeType": "Block",
              "src": "1361:151:12",
              "statements": [
                {
                  "assignments": [
                    24262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24262,
                      "mutability": "mutable",
                      "name": "routerAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 24275,
                      "src": "1371:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24261,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1371:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24266,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24263,
                        "name": "testContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24156,
                        "src": "1395:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapTest_$24144",
                          "typeString": "contract UniswapTest"
                        }
                      },
                      "id": 24264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRouter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24143,
                      "src": "1395:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 24265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1371:48:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24268,
                        "name": "routerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24262,
                        "src": "1438:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                            "id": 24271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1461:42:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 24270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1453:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1453:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 24272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1453:51:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24267,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3232,
                        3257,
                        3270,
                        3286,
                        3328,
                        3370,
                        3412,
                        3449,
                        3486,
                        3523,
                        389,
                        414,
                        444,
                        469,
                        528,
                        553,
                        583,
                        608,
                        1708,
                        1743
                      ],
                      "referencedDeclaration": 389,
                      "src": "1429:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:76:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24274,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:76:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1afd7ba7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRouter",
            "overrides": null,
            "parameters": {
              "id": 24259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:2:12"
            },
            "returnParameters": {
              "id": 24260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:0:12"
            },
            "scope": 24330,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24329,
            "nodeType": "FunctionDefinition",
            "src": "1520:493:12",
            "body": {
              "id": 24328,
              "nodeType": "Block",
              "src": "1547:466:12",
              "statements": [
                {
                  "assignments": [
                    24283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24283,
                      "mutability": "mutable",
                      "name": "s_tokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 24328,
                      "src": "1598:25:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1598:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24282,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1598:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24289,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 24287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1640:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 24286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1626:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1630:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24285,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1630:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 24288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:16:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1598:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24290,
                        "name": "s_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24283,
                        "src": "1652:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24292,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 24291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1661:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1652:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 24295,
                          "name": "USDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24162,
                          "src": "1674:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1666:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1666:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 24296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1666:13:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1652:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24298,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:27:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24299,
                        "name": "s_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24283,
                        "src": "1711:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24301,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 24300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1711:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 24304,
                          "name": "DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24159,
                          "src": "1733:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1725:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24302,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1725:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 24305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1725:12:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1711:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24307,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:26:12"
                },
                {
                  "assignments": [
                    24312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24312,
                      "mutability": "mutable",
                      "name": "test",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 24328,
                      "src": "1747:18:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24310,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1747:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24311,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1747:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24327,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 24315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1810:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 24316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1838:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "argumentTypes": null,
                        "id": 24317,
                        "name": "s_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24283,
                        "src": "1871:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24320,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1922:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UniswapTestTester_$24330",
                              "typeString": "contract UniswapTestTester"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UniswapTestTester_$24330",
                              "typeString": "contract UniswapTestTester"
                            }
                          ],
                          "id": 24319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1914:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24318,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1914:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 24321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1914:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24322,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1957:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 24323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1957:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 24324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1975:9:12",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "1"
                        },
                        "src": "1957:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24313,
                        "name": "testContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24156,
                        "src": "1777:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapTest_$24144",
                          "typeString": "contract UniswapTest"
                        }
                      },
                      "id": 24314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24085,
                      "src": "1777:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 24326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:229:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1747:259:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6e008a03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSwap",
            "overrides": null,
            "parameters": {
              "id": 24277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1537:2:12"
            },
            "returnParameters": {
              "id": 24278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1547:0:12"
            },
            "scope": 24330,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24150,
              "name": "Test",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4998,
              "src": "176:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Test_$4998",
                "typeString": "contract Test"
              }
            },
            "id": 24151,
            "nodeType": "InheritanceSpecifier",
            "src": "176:4:12"
          }
        ],
        "contractDependencies": [
          1855,
          2117,
          4998,
          24144
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24330,
          4998,
          2117,
          1855
        ],
        "name": "UniswapTestTester",
        "scope": 24331
      }
    ]
  },
  "id": 12
}