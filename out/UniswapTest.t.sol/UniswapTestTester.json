{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testContract",
      "outputs": [
        {
          "internalType": "contract UniswapTest",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50611f5d806100316000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ba414fa61161005b578063ba414fa6146100df578063c36631b4146100f7578063f8ccbf471461010a578063fa7626d41461011d57600080fd5b80630a9254e41461008d5780631afd7ba7146100975780633a7684631461009f5780633df77c0e146100d7575b600080fd5b61009561012a565b005b6100956101fd565b6100ba737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61009561028e565b6100e7610310565b60405190151581526020016100ce565b6008546100ba906001600160a01b031681565b6000546100e79062010000900460ff1681565b6000546100e79060ff1681565b6040516101369061188a565b604051809103906000f080158015610152573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b039290921691821790556101fb90683635c9adc5dea00000906101f5906101cc6370a0823160e01b6101af6001736b175474e89094c44da98b954eedeac495271d0f61043b565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90610460565b565b6008546040805163b0f479a160e01b815290516000926001600160a01b03169163b0f479a19160048083019260209291908290030181865afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b91906118c9565b905061028b81737a250d5630b4cf539739df2c5dacb4c659f2488d61046e565b50565b60085460408051629032ff60e51b815290516000926001600160a01b0316916312065fe09160048083019260209291908290030181865afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb91906118f9565b905061028b81683635c9adc5dea00000610572565b60008054610100900460ff16156103305750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156104365760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916103be917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611942565b60408051601f19818403018152908290526103d891611966565b6000604051808303816000865af19150503d8060008114610415576040519150601f19603f3d011682016040523d82523d6000602084013e61041a565b606091505b50915050808060200190518101906104329190611972565b9150505b919050565b6005820180546001600160a01b0319166001600160a01b038316179055815b92915050565b61046a8282610651565b5050565b806001600160a01b0316826001600160a01b03161461046a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104f49060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161052b9190611994565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405161056291906119d8565b60405180910390a161046a6109b3565b80821461046a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105e39060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405161061a9190611a02565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516105629190611a3a565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156106c257602002820191906000526020600020905b8154815260200190600101908083116106ae575b505050505090506000836106d583610ab8565b6040516020016106e6929190611942565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091610738918691889101611a64565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166107705761076e87610b5f565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916107af918791899101611a64565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516107f49190611966565b600060405180830381855afa9150503d806000811461082f576040519150601f19603f3d011682016040523d82523d6000602084013e610834565b606091505b50915061084d905081610848886020611ab4565b61180d565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d70906044016020604051808303816000875af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d991906118f9565b90508082146109035760405162461bcd60e51b81526004016108fa90611acb565b60405180910390fd5b6040516370ca10bb60e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb9061093e908b9087908e90600401611b66565b600060405180830381600087803b15801561095857600080fd5b505af115801561096c573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561099f60028b016000611897565b896004016000905550505050505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610aa757604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490610a289083906519985a5b195960d21b90600190602001611b66565b60408051601f1981840301815290829052610a469291602001611942565b60408051601f1981840301815290829052610a6091611966565b6000604051808303816000865af19150503d8060008114610a9d576040519150601f19603f3d011682016040523d82523d6000602084013e610aa2565b606091505b505050505b6000805461ff001916610100179055565b6060600082516020610aca9190611ab4565b67ffffffffffffffff811115610ae257610ae2611b87565b6040519080825280601f01601f191660200182016040528015610b0c576020820181803683370190505b50905060005b8351811015610b58576000848281518110610b2f57610b2f611b9d565b602002602001015190508082602002602001840152508080610b5090611bb3565b915050610b12565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015610bcf57602002820191906000526020600020905b815481526020019060010190808311610bbb575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350610c1992508591879101611a64565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615610cb5576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291610c85918591879101611a64565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083610cc183610ab8565b604051602001610cd2929190611942565b6040516020818303038152906040529050600080516020611f0883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051610d629190611966565b600060405180830381855afa9150503d8060008114610d9d576040519150601f19603f3d011682016040523d82523d6000602084013e610da2565b606091505b509150610db6905081610848876020611ab4565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af1158015610e17573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e3f9190810190611c67565b5090508051600103611103576000600080516020611f0883398151915260001c6001600160a01b031663667f9d708984600081518110610e8157610e81611b9d565b60200260200101516040518363ffffffff1660e01b8152600401610eba9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd91906118f9565b905080610f64577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110610f3957610f39611b9d565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b808314610f835760405162461bcd60e51b81526004016108fa90611acb565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001610fb9929190611a64565b6040516020818303038152906040528051906020012085600081518110610fe257610fe2611b9d565b602002602001015160001c604051610ffd9493929190611ccb565b60405180910390a18160008151811061101857611018611b9d565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092611061918a918c9101611a64565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916110c9918a918c9101611a64565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550611698565b6001815111156116285760005b8151811015611622576000600080516020611f0883398151915260001c6001600160a01b031663667f9d708a85858151811061114e5761114e611b9d565b60200260200101516040518363ffffffff1660e01b81526004016111879291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156111a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ca91906118f9565b905080611230577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811061120557611205611b9d565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b600080516020611f0883398151915260001c6001600160a01b03166370ca10bb8a85858151811061126357611263611b9d565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040161128f93929190611b66565b600060405180830381600087803b1580156112a957600080fd5b505af11580156112bd573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516112dd9190611966565b600060405180830381855afa9150503d8060008114611318576040519150601f19603f3d011682016040523d82523d6000602084013e61131d565b606091505b509092509050611332816108488b6020611ab4565b9550818015611345575061133760f01b86145b15611580577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001611380929190611a64565b604051602081830303815290604052805190602001208888815181106113a8576113a8611b9d565b602002602001015160001c6040516113c39493929190611ccb565b60405180910390a18484815181106113dd576113dd611b9d565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092611426918d918f9101611a64565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016114b1929190611a64565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020611f0883398151915260001c6001600160a01b03166370ca10bb8c87878151811061151f5761151f611b9d565b6020026020010151866040518463ffffffff1660e01b815260040161154693929190611b66565b600060405180830381600087803b15801561156057600080fd5b505af1158015611574573d6000803e3d6000fd5b50505050505050611622565b600080516020611f0883398151915260001c6001600160a01b03166370ca10bb8c8787815181106115b3576115b3611b9d565b6020026020010151866040518463ffffffff1660e01b81526004016115da93929190611b66565b600060405180830381600087803b1580156115f457600080fd5b505af1158015611608573d6000803e3d6000fd5b50505050505050808061161a90611bb3565b915050611110565b50611698565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016108fa565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916116da9188918a9101611a64565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166117675760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016108fa565b6005890180546001600160a01b031916905560038901805463ffffffff1916905561179660028a016000611897565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916117da9188918a9101611a64565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111611822578451611825565b60205b905060005b818110156118805761183d816008611ab4565b866118488388611cfb565b8151811061185857611858611b9d565b01602001516001600160f81b031916901c92909217918061187881611bb3565b91505061182a565b5090949350505050565b6101f980611d0f83390190565b508054600082559060005260206000209081019061028b91905b808211156118c557600081556001016118b1565b5090565b6000602082840312156118db57600080fd5b81516001600160a01b03811681146118f257600080fd5b9392505050565b60006020828403121561190b57600080fd5b5051919050565b6000815160005b818110156119335760208185018101518683015201611919565b50600093019283525090919050565b6001600160e01b031983168152600061195e6004830184611912565b949350505050565b60006118f28284611912565b60006020828403121561198457600080fd5b815180151581146118f257600080fd5b6040815260006119be60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006119be60408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000611a2c60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000611a2c60408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b83811015611a8e57815185529382019390820190600101611a72565b5050948252509092019392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761045a5761045a611a9e565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611bc557611bc5611a9e565b5060010190565b600082601f830112611bdd57600080fd5b8151602067ffffffffffffffff80831115611bfa57611bfa611b87565b8260051b604051601f19603f83011681018181108482111715611c1f57611c1f611b87565b604052938452858101830193838101925087851115611c3d57600080fd5b83870191505b84821015611c5c57815183529183019190830190611c43565b979650505050505050565b60008060408385031215611c7a57600080fd5b825167ffffffffffffffff80821115611c9257600080fd5b611c9e86838701611bcc565b93506020850151915080821115611cb457600080fd5b50611cc185828601611bcc565b9150509250929050565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b8082018082111561045a5761045a611a9e56fe6080604052600080546001600160a01b0319908116737a250d5630b4cf539739df2c5dacb4c659f2488d1790915560018054909116736b175474e89094c44da98b954eedeac495271d0f17905534801561005857600080fd5b50610191806100686000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312065fe01461005157806389a302711461006c578063b0f479a11461009f578063e0bab4c4146100b0575b600080fd5b6100596100cb565b6040519081526020015b60405180910390f35b61008773a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6040516001600160a01b039091168152602001610063565b6000546001600160a01b0316610087565b610087736b175474e89094c44da98b954eedeac495271d0f81565b6001546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013c9190610142565b92915050565b60006020828403121561015457600080fd5b505191905056fea264697066735822122035f6a9d6feb961dec44700b2ded6cce08b1e60063b47520e0e5871eb64eaaefa64736f6c63430008110033885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212200c4868a52a1e40d714293d8e4b54a43e3b25821b70e823a2a1a8ee7319b729eb64736f6c63430008110033",
    "sourceMap": "146:859:9:-:0;;;1572:26:1;;;-1:-1:-1;;170:28:2;;;;;146:859:9;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063ba414fa61161005b578063ba414fa6146100df578063c36631b4146100f7578063f8ccbf471461010a578063fa7626d41461011d57600080fd5b80630a9254e41461008d5780631afd7ba7146100975780633a7684631461009f5780633df77c0e146100d7575b600080fd5b61009561012a565b005b6100956101fd565b6100ba737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61009561028e565b6100e7610310565b60405190151581526020016100ce565b6008546100ba906001600160a01b031681565b6000546100e79062010000900460ff1681565b6000546100e79060ff1681565b6040516101369061188a565b604051809103906000f080158015610152573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b039290921691821790556101fb90683635c9adc5dea00000906101f5906101cc6370a0823160e01b6101af6001736b175474e89094c44da98b954eedeac495271d0f61043b565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90610460565b565b6008546040805163b0f479a160e01b815290516000926001600160a01b03169163b0f479a19160048083019260209291908290030181865afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b91906118c9565b905061028b81737a250d5630b4cf539739df2c5dacb4c659f2488d61046e565b50565b60085460408051629032ff60e51b815290516000926001600160a01b0316916312065fe09160048083019260209291908290030181865afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb91906118f9565b905061028b81683635c9adc5dea00000610572565b60008054610100900460ff16156103305750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156104365760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916103be917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611942565b60408051601f19818403018152908290526103d891611966565b6000604051808303816000865af19150503d8060008114610415576040519150601f19603f3d011682016040523d82523d6000602084013e61041a565b606091505b50915050808060200190518101906104329190611972565b9150505b919050565b6005820180546001600160a01b0319166001600160a01b038316179055815b92915050565b61046a8282610651565b5050565b806001600160a01b0316826001600160a01b03161461046a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104f49060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161052b9190611994565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405161056291906119d8565b60405180910390a161046a6109b3565b80821461046a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105e39060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405161061a9190611a02565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516105629190611a3a565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156106c257602002820191906000526020600020905b8154815260200190600101908083116106ae575b505050505090506000836106d583610ab8565b6040516020016106e6929190611942565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091610738918691889101611a64565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166107705761076e87610b5f565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916107af918791899101611a64565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516107f49190611966565b600060405180830381855afa9150503d806000811461082f576040519150601f19603f3d011682016040523d82523d6000602084013e610834565b606091505b50915061084d905081610848886020611ab4565b61180d565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d70906044016020604051808303816000875af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d991906118f9565b90508082146109035760405162461bcd60e51b81526004016108fa90611acb565b60405180910390fd5b6040516370ca10bb60e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb9061093e908b9087908e90600401611b66565b600060405180830381600087803b15801561095857600080fd5b505af115801561096c573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561099f60028b016000611897565b896004016000905550505050505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610aa757604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490610a289083906519985a5b195960d21b90600190602001611b66565b60408051601f1981840301815290829052610a469291602001611942565b60408051601f1981840301815290829052610a6091611966565b6000604051808303816000865af19150503d8060008114610a9d576040519150601f19603f3d011682016040523d82523d6000602084013e610aa2565b606091505b505050505b6000805461ff001916610100179055565b6060600082516020610aca9190611ab4565b67ffffffffffffffff811115610ae257610ae2611b87565b6040519080825280601f01601f191660200182016040528015610b0c576020820181803683370190505b50905060005b8351811015610b58576000848281518110610b2f57610b2f611b9d565b602002602001015190508082602002602001840152508080610b5090611bb3565b915050610b12565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015610bcf57602002820191906000526020600020905b815481526020019060010190808311610bbb575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350610c1992508591879101611a64565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615610cb5576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291610c85918591879101611a64565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083610cc183610ab8565b604051602001610cd2929190611942565b6040516020818303038152906040529050600080516020611f0883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051610d629190611966565b600060405180830381855afa9150503d8060008114610d9d576040519150601f19603f3d011682016040523d82523d6000602084013e610da2565b606091505b509150610db6905081610848876020611ab4565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af1158015610e17573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e3f9190810190611c67565b5090508051600103611103576000600080516020611f0883398151915260001c6001600160a01b031663667f9d708984600081518110610e8157610e81611b9d565b60200260200101516040518363ffffffff1660e01b8152600401610eba9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd91906118f9565b905080610f64577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110610f3957610f39611b9d565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b808314610f835760405162461bcd60e51b81526004016108fa90611acb565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001610fb9929190611a64565b6040516020818303038152906040528051906020012085600081518110610fe257610fe2611b9d565b602002602001015160001c604051610ffd9493929190611ccb565b60405180910390a18160008151811061101857611018611b9d565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092611061918a918c9101611a64565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916110c9918a918c9101611a64565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550611698565b6001815111156116285760005b8151811015611622576000600080516020611f0883398151915260001c6001600160a01b031663667f9d708a85858151811061114e5761114e611b9d565b60200260200101516040518363ffffffff1660e01b81526004016111879291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156111a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ca91906118f9565b905080611230577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811061120557611205611b9d565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b600080516020611f0883398151915260001c6001600160a01b03166370ca10bb8a85858151811061126357611263611b9d565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040161128f93929190611b66565b600060405180830381600087803b1580156112a957600080fd5b505af11580156112bd573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516112dd9190611966565b600060405180830381855afa9150503d8060008114611318576040519150601f19603f3d011682016040523d82523d6000602084013e61131d565b606091505b509092509050611332816108488b6020611ab4565b9550818015611345575061133760f01b86145b15611580577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001611380929190611a64565b604051602081830303815290604052805190602001208888815181106113a8576113a8611b9d565b602002602001015160001c6040516113c39493929190611ccb565b60405180910390a18484815181106113dd576113dd611b9d565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092611426918d918f9101611a64565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016114b1929190611a64565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020611f0883398151915260001c6001600160a01b03166370ca10bb8c87878151811061151f5761151f611b9d565b6020026020010151866040518463ffffffff1660e01b815260040161154693929190611b66565b600060405180830381600087803b15801561156057600080fd5b505af1158015611574573d6000803e3d6000fd5b50505050505050611622565b600080516020611f0883398151915260001c6001600160a01b03166370ca10bb8c8787815181106115b3576115b3611b9d565b6020026020010151866040518463ffffffff1660e01b81526004016115da93929190611b66565b600060405180830381600087803b1580156115f457600080fd5b505af1158015611608573d6000803e3d6000fd5b50505050505050808061161a90611bb3565b915050611110565b50611698565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016108fa565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916116da9188918a9101611a64565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166117675760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016108fa565b6005890180546001600160a01b031916905560038901805463ffffffff1916905561179660028a016000611897565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916117da9188918a9101611a64565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111611822578451611825565b60205b905060005b818110156118805761183d816008611ab4565b866118488388611cfb565b8151811061185857611858611b9d565b01602001516001600160f81b031916901c92909217918061187881611bb3565b91505061182a565b5090949350505050565b6101f980611d0f83390190565b508054600082559060005260206000209081019061028b91905b808211156118c557600081556001016118b1565b5090565b6000602082840312156118db57600080fd5b81516001600160a01b03811681146118f257600080fd5b9392505050565b60006020828403121561190b57600080fd5b5051919050565b6000815160005b818110156119335760208185018101518683015201611919565b50600093019283525090919050565b6001600160e01b031983168152600061195e6004830184611912565b949350505050565b60006118f28284611912565b60006020828403121561198457600080fd5b815180151581146118f257600080fd5b6040815260006119be60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006119be60408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000611a2c60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000611a2c60408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b83811015611a8e57815185529382019390820190600101611a72565b5050948252509092019392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761045a5761045a611a9e565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611bc557611bc5611a9e565b5060010190565b600082601f830112611bdd57600080fd5b8151602067ffffffffffffffff80831115611bfa57611bfa611b87565b8260051b604051601f19603f83011681018181108482111715611c1f57611c1f611b87565b604052938452858101830193838101925087851115611c3d57600080fd5b83870191505b84821015611c5c57815183529183019190830190611c43565b979650505050505050565b60008060408385031215611c7a57600080fd5b825167ffffffffffffffff80821115611c9257600080fd5b611c9e86838701611bcc565b93506020850151915080821115611cb457600080fd5b50611cc185828601611bcc565b9150509250929050565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b8082018082111561045a5761045a611a9e56fe6080604052600080546001600160a01b0319908116737a250d5630b4cf539739df2c5dacb4c659f2488d1790915560018054909116736b175474e89094c44da98b954eedeac495271d0f17905534801561005857600080fd5b50610191806100686000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312065fe01461005157806389a302711461006c578063b0f479a11461009f578063e0bab4c4146100b0575b600080fd5b6100596100cb565b6040519081526020015b60405180910390f35b61008773a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6040516001600160a01b039091168152602001610063565b6000546001600160a01b0316610087565b610087736b175474e89094c44da98b954eedeac495271d0f81565b6001546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013c9190610142565b92915050565b60006020828403121561015457600080fd5b505191905056fea264697066735822122035f6a9d6feb961dec44700b2ded6cce08b1e60063b47520e0e5871eb64eaaefa64736f6c63430008110033885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212200c4868a52a1e40d714293d8e4b54a43e3b25821b70e823a2a1a8ee7319b729eb64736f6c63430008110033",
    "sourceMap": "146:859:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;263:378;;;:::i;:::-;;823:180;;;:::i;321:38:2:-;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:10;;;171:51;;159:2;144:18;321:38:2;;;;;;;;647:170:9;;;:::i;1819:584:1:-;;;:::i;:::-;;;398:14:10;;391:22;373:41;;361:2;346:18;1819:584:1;233:187:10;225:31:9;;;;;-1:-1:-1;;;;;225:31:9;;;170:28:2;;;;;;;;;;;;1572:26:1;;;;;;;;;263:378:9;312:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;297:12:9;:32;;-1:-1:-1;;;;;;297:32:9;-1:-1:-1;;;;;297:32:9;;;;;;;;;339:295;;622:11;;339:255;;:210;-1:-1:-1;;;339:81:9;-1:-1:-1;376:42:9;339:28;:81::i;:::-;:130;32347:9:4;;;:16;;-1:-1:-1;;32347:16:4;;;;;;;;;;;;:9;32248:143;339:210:9;:232;32663:10:4;;;:47;;;;;;;-1:-1:-1;32663:47:4;;;;;;;-1:-1:-1;;;;;32687:21:4;;;;32663:47;;;:10;32559:179;339:255:9;:282;;:295::i;:::-;263:378::o;823:180::-;886:12;;:24;;;-1:-1:-1;;;886:24:9;;;;862:21;;-1:-1:-1;;;;;886:12:9;;:22;;:24;;;;;;;;;;;;;;:12;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;862:48;;920:76;929:13;952:42;920:8;:76::i;:::-;852:151;823:180::o;647:170::-;707:12;;:25;;;-1:-1:-1;;;707:25:9;;;;689:15;;-1:-1:-1;;;;;707:12:9;;:23;;:25;;;;;;;;;;;;;;:12;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;689:43;;742:41;751:7;760:22;742:8;:41::i;1819:584:1:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1312:51:10;;;-1:-1:-1;;;1379:18:10;;;1372:34;2196:43:1;;;;;;;;;1285:18:10;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;32086:156:4:-;32192:12;;;:22;;-1:-1:-1;;;;;;32192:22:4;-1:-1:-1;;;;;32192:22:4;;;;;:12;32086:156;;;;;:::o;33370:120::-;33450:33;33464:4;33478:3;33450:13;:33::i;:::-;33370:120;;:::o;3615:277:1:-;3683:1;-1:-1:-1;;;;;3678:6:1;:1;-1:-1:-1;;;;;3678:6:1;;3674:212;;3705:44;;;;;2705:2:10;2687:21;;;2744:2;2724:18;;;2717:30;2783:34;2778:2;2763:18;;2756:62;-1:-1:-1;;;2849:2:10;2834:18;;2827:35;2894:3;2879:19;;2503:401;3705:44:1;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;4197:2:10;4179:21;;;4236:2;4216:18;;;4209:30;4275:34;4270:2;4255:18;;4248:62;-1:-1:-1;;;4341:2:10;4326:18;;4319:32;4383:3;4368:19;;3995:398;5286:41:1;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;33724:1089:4:-;33840:12;;;;33876:9;;;;33917:11;;;;33961:10;;;33938:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;33840:12:4;;;;33876:9;;;;;;33826:11;;33938:33;;33961:10;;33938:33;;33961:10;33938:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33982:17;34019:4;34025:12;34033:3;34025:7;:12::i;:::-;34002:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;34002:36:4;;;;;;;;;-1:-1:-1;;;;;34053:15:4;;;;;;:10;;;34002:36;34053:15;;;;;;-1:-1:-1;;;;;;34053:21:4;;;;;;;;;34002:36;;-1:-1:-1;34053:21:4;;:15;;34085:34;;34102:3;;34107:11;;34085:34;;:::i;:::-;;;;-1:-1:-1;;34085:34:4;;;;;;;;;34075:45;;34085:34;34075:45;;;;34053:68;;;;;;;;;;-1:-1:-1;34053:68:4;;;;34048:110;;34137:10;34142:4;34137;:10::i;:::-;;34048:110;-1:-1:-1;;;;;34190:15:4;;34167:12;34190:15;;;;;;;;;;;-1:-1:-1;;;;;;34190:21:4;;;;;;;;;34222:34;;34190:21;;34167:12;;34222:34;;34239:3;;34244:11;;34222:34;;:::i;:::-;;;;;;;;;;;;;34212:45;;;;;;34190:68;;;;;;;;;;;;34182:77;;34167:92;;34270:12;34309:17;34330:3;-1:-1:-1;;;;;34330:14:4;34345:4;34330:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34306:44:4;-1:-1:-1;34371:36:4;;-1:-1:-1;34306:44:4;34392:14;34395:11;34392:2;:14;:::i;:::-;34371;:36::i;:::-;34442:28;;-1:-1:-1;;;34442:28:4;;-1:-1:-1;;;;;1330:32:10;;34442:28:4;;;1312:51:10;1379:18;;;1372:34;;;34364:43:4;;-1:-1:-1;34427:12:4;;-1:-1:-1;34442:17:4;;;;1285:18:10;;34442:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34427:43;;34493:4;34485;:12;34481:172;;34513:129;;-1:-1:-1;;;34513:129:4;;;;;;;:::i;:::-;;;;;;;;;34662:34;;-1:-1:-1;;;34662:34:4;;:18;;;;:34;;34681:3;;34686:4;;34692:3;;34662:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;34713:12:4;;;34706:19;;-1:-1:-1;;;;;;34706:19:4;;;-1:-1:-1;34742:9:4;;;34735:16;;-1:-1:-1;;34735:16:4;;;34761:17;-1:-1:-1;34768:10:4;;34713:12;34761:17;:::i;:::-;34795:4;:11;;34788:18;;;33816:997;;;;;;;;33724:1089;;:::o;2410:424:1:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;2482:11;;1671:64;;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:1;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:1;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:1;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:1;2813:7;:14;;-1:-1:-1;;2813:14:1;;;;;2410:424::o;36157:397:4:-;36216:12;36244:19;36276:1;:8;36287:2;36276:13;;;;:::i;:::-;36266:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36266:24:4;;36244:46;;36305:9;36300:224;36324:1;:8;36320:1;:12;36300:224;;;36353:9;36365:1;36367;36365:4;;;;;;;;:::i;:::-;;;;;;;36353:16;;36498:1;36492;36488:2;36484:10;36480:2;36476:19;36468:6;36464:32;36457:43;36439:75;36334:3;;;;;:::i;:::-;;;;36300:224;;;-1:-1:-1;36541:6:4;36157:397;-1:-1:-1;;36157:397:4:o;28866:3214::-;28990:12;;;;29026:9;;;;29067:11;;;;29111:10;;;29088:33;;;;;;;;;;;;;;;;;;;28953:7;;-1:-1:-1;;;;;28990:12:4;;29026:9;;;29067:11;28953:7;;29088:33;;29111:10;;29088:33;;;29111:10;29088:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;29172:15:4;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;29172:21:4;;;;;;;;;29204:34;;29088:33;;-1:-1:-1;29172:21:4;:15;;-1:-1:-1;29204:34:4;;-1:-1:-1;29088:33:4;;29226:11;;29204:34;;:::i;:::-;;;;-1:-1:-1;;29204:34:4;;;;;;;;;29194:45;;29204:34;29194:45;;;;29172:68;;;;;;;;;;-1:-1:-1;29172:68:4;;;;29168:174;;;-1:-1:-1;;;;;29263:15:4;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;29263:21:4;;;;;;;;;29295:34;;29263:21;;:10;29295:34;;29312:3;;29317:11;;29295:34;;:::i;:::-;;;;;;;;;;;;;29285:45;;;;;;29263:68;;;;;;;;;;;;29256:75;;;;;;28866:3214;;;:::o;29168:174::-;29351:17;29388:4;29394:12;29402:3;29394:7;:12::i;:::-;29371:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;29351:56;;-1:-1:-1;;;;;;;;;;;28140:37:4;;-1:-1:-1;;;;;29417:19:4;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29448:12;29487:17;29508:3;-1:-1:-1;;;;;29508:14:4;29523:4;29508:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29484:44:4;-1:-1:-1;29549:36:4;;-1:-1:-1;29484:44:4;29570:14;29573:11;29570:2;:14;:::i;29549:36::-;29635:35;;-1:-1:-1;;;29635:35:4;;-1:-1:-1;;;;;189:32:10;;29635:35:4;;;171:51:10;29542:43:4;;-1:-1:-1;29607:22:4;;-1:-1:-1;29635:21:4;;;;144:18:10;;29635:35:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29635:35:4;;;;;;;;;;;;:::i;:::-;29606:64;;;29684:5;:12;29700:1;29684:17;29680:2058;;29717:12;-1:-1:-1;;;;;;;;;;;28140:37:4;;-1:-1:-1;;;;;29732:17:4;;29750:3;29755:5;29761:1;29755:8;;;;;;;;:::i;:::-;;;;;;;29732:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;1330:32:10;;;;1312:51;;1394:2;1379:18;;1372:34;1300:2;1285:18;;1138:274;29732:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29717:47;-1:-1:-1;29717:47:4;29778:106;;29825:44;29846:3;29859:5;29865:1;29859:8;;;;;;;;:::i;:::-;;;;;;;;;;;;29825:44;;;-1:-1:-1;;;;;1330:32:10;;;1312:51;;1379:18;;;1372:34;1285:18;29825:44:4;;;;;;;29778:106;29909:4;29901;:12;29897:180;;29933:129;;-1:-1:-1;;;29933:129:4;;;;;;;:::i;:::-;30095:86;30105:3;30110:4;30143:3;30148:11;30126:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30116:45;;;;;;30171:5;30177:1;30171:8;;;;;;;;:::i;:::-;;;;;;;30163:17;;30095:86;;;;;;;;;:::i;:::-;;;;;;;;30274:5;30280:1;30274:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;30195:15:4;;30266:17;30195:15;;;;;;;;;;-1:-1:-1;;;;;;30195:21:4;;;;;;;;;30227:34;;30274:8;;30195:21;;30227:34;;30244:3;;30249:11;;30227:34;;:::i;:::-;;;;-1:-1:-1;;30227:34:4;;;;;;;;;30217:45;;30227:34;30217:45;;;;30195:68;;;;;;;;;;;;-1:-1:-1;30195:68:4;;;:88;;;;-1:-1:-1;;;;;30297:15:4;;;;30368:4;30297:10;;;:15;;;;;-1:-1:-1;;;;;;30297:21:4;;;;;;;;;30329:34;;30368:4;;-1:-1:-1;30329:34:4;;30346:3;;30351:11;;30329:34;;:::i;:::-;;;;;;;-1:-1:-1;;30329:34:4;;;;;;30319:45;;30329:34;30319:45;;;;30297:68;;;;;;;;;;-1:-1:-1;30297:68:4;:75;;-1:-1:-1;;30297:75:4;;;;;;;;;;-1:-1:-1;29680:2058:4;;;30408:1;30393:5;:12;:16;30389:1349;;;30430:9;30425:1190;30449:5;:12;30445:1;:16;30425:1190;;;30486:12;-1:-1:-1;;;;;;;;;;;28140:37:4;;-1:-1:-1;;;;;30501:17:4;;30519:3;30524:5;30530:1;30524:8;;;;;;;;:::i;:::-;;;;;;;30501:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;1330:32:10;;;;1312:51;;1394:2;1379:18;;1372:34;1300:2;1285:18;;1138:274;30501:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30486:47;-1:-1:-1;30486:47:4;30551:114;;30602:44;30623:3;30636:5;30642:1;30636:8;;;;;;;;:::i;:::-;;;;;;;;;;;;30602:44;;;-1:-1:-1;;;;;1330:32:10;;;1312:51;;1379:18;;;1372:34;1285:18;30602:44:4;;;;;;;30551:114;-1:-1:-1;;;;;;;;;;;28140:37:4;;-1:-1:-1;;;;;30707:18:4;;30726:3;30731:5;30737:1;30731:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;30707:53:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30778:12;30808:17;30883:3;-1:-1:-1;;;;;30883:14:4;30898:4;30883:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30865:38:4;;-1:-1:-1;30865:38:4;-1:-1:-1;30932:36:4;30865:38;30953:14;30956:11;30953:2;:14;:::i;30932:36::-;30925:43;;31009:7;:37;;;;;-1:-1:-1;;;31020:4:4;:26;31009:37;31005:539;;;31144:86;31154:3;31159:4;31192:3;31197:11;31175:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;31165:45;;;;;;31220:5;31226:1;31220:8;;;;;;;;:::i;:::-;;;;;;;31212:17;;31144:86;;;;;;;;;:::i;:::-;;;;;;;;31331:5;31337:1;31331:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;31252:15:4;;31323:17;31252:15;;;;;;;;;;-1:-1:-1;;;;;;31252:21:4;;;;;;;;;31284:34;;31331:8;;31252:21;;31284:34;;31301:3;;31306:11;;31284:34;;:::i;:::-;;;;;;;;;;;;;31274:45;;;;;;31252:68;;;;;;;;;;;:88;;;;31433:4;31362;:10;;:15;31373:3;-1:-1:-1;;;;;31362:15:4;-1:-1:-1;;;;;31362:15:4;;;;;;;;;;;;:21;31378:4;-1:-1:-1;;;;;31362:21:4;;-1:-1:-1;;;;;31362:21:4;;;;;;;;;;;;;:68;31411:3;31416:11;31394:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;31384:45;;;;;;31362:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;28140:37:4;;-1:-1:-1;;;;;31459:18:4;;31478:3;31483:5;31489:1;31483:8;;;;;;;;:::i;:::-;;;;;;;31493:4;31459:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31520:5;;;;;31005:539;-1:-1:-1;;;;;;;;;;;28140:37:4;;-1:-1:-1;;;;;31561:18:4;;31580:3;31585:5;31591:1;31585:8;;;;;;;;:::i;:::-;;;;;;;31595:4;31561:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30468:1147;;;30463:3;;;;;:::i;:::-;;;;30425:1190;;;;30389:1349;;;31645:82;;;-1:-1:-1;;;31645:82:4;;10187:2:10;31645:82:4;;;10169:21:10;10206:18;;;10199:30;;;;10265:34;10245:18;;;10238:62;10336:34;10316:18;;;10309:62;10388:19;;31645:82:4;9985:428:10;31645:82:4;-1:-1:-1;;;;;31756:15:4;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;31756:21:4;;;;;;;;;31788:34;;31756:21;;:15;31788:34;;31805:3;;31810:11;;31788:34;;:::i;:::-;;;;-1:-1:-1;;31788:34:4;;;;;;;;;31778:45;;31788:34;31778:45;;;;31756:68;;;;;;;;;;-1:-1:-1;31756:68:4;;;;31748:128;;;;-1:-1:-1;;;31748:128:4;;10620:2:10;31748:128:4;;;10602:21:10;10659:2;10639:18;;;10632:30;10698:34;10678:18;;;10671:62;-1:-1:-1;;;10749:18:10;;;10742:45;10804:19;;31748:128:4;10418:411:10;31748:128:4;31894:12;;;31887:19;;-1:-1:-1;;;;;;31887:19:4;;;31923:9;;;31916:16;;-1:-1:-1;;31916:16:4;;;31942:17;-1:-1:-1;31949:10:4;;31894:12;31942:17;:::i;:::-;31969:18;31976:11;;;31969:18;;;-1:-1:-1;;;;;32005:15:4;;;;;;;;;;;;-1:-1:-1;;;;;;32005:21:4;;;;;;;;;32037:34;;32005:21;;31969:18;32037:34;;32054:3;;32059:11;;32037:34;;:::i;:::-;;;;;;;;;;;;;32027:45;;;;;;32005:68;;;;;;;;;;;;31998:75;;;;;;;;;28866:3214;;;:::o;35854:297::-;35928:7;35947:11;35969;35994:2;35983:1;:8;:13;:29;;36004:1;:8;35983:29;;;35999:2;35983:29;35969:43;;36027:6;36022:103;36043:3;36039:1;:7;36022:103;;;36108:5;:1;36112;36108:5;:::i;:::-;36082:1;36084:10;36093:1;36084:6;:10;:::i;:::-;36082:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;36082:13:4;36074:40;;36067:47;;;;;36048:3;;;;:::i;:::-;;;;36022:103;;;-1:-1:-1;36141:3:4;;35854:297;-1:-1:-1;;;;35854:297:4:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;654:290:10:-;724:6;777:2;765:9;756:7;752:23;748:32;745:52;;;793:1;790;783:12;745:52;819:16;;-1:-1:-1;;;;;864:31:10;;854:42;;844:70;;910:1;907;900:12;844:70;933:5;654:290;-1:-1:-1;;;654:290:10:o;949:184::-;1019:6;1072:2;1060:9;1051:7;1047:23;1043:32;1040:52;;;1088:1;1085;1078:12;1040:52;-1:-1:-1;1111:16:10;;949:184;-1:-1:-1;949:184:10:o;1417:322::-;1458:3;1496:5;1490:12;1520:1;1530:128;1544:6;1541:1;1538:13;1530:128;;;1641:4;1626:13;;;1622:24;;1616:31;1603:11;;;1596:52;1559:12;1530:128;;;-1:-1:-1;1713:1:10;1677:16;;1702:13;;;-1:-1:-1;1677:16:10;;1417:322;-1:-1:-1;1417:322:10:o;1744:278::-;-1:-1:-1;;;;;;1929:33:10;;1917:46;;1899:3;1979:37;2013:1;2004:11;;1996:6;1979:37;:::i;:::-;1972:44;1744:278;-1:-1:-1;;;;1744:278:10:o;2027:189::-;2156:3;2181:29;2206:3;2198:6;2181:29;:::i;2221:277::-;2288:6;2341:2;2329:9;2320:7;2316:23;2312:32;2309:52;;;2357:1;2354;2347:12;2309:52;2389:9;2383:16;2442:5;2435:13;2428:21;2421:5;2418:32;2408:60;;2464:1;2461;2454:12;3073:374;3303:2;3292:9;3285:21;3266:4;3323:49;3368:2;3357:9;3353:18;2986:2;2974:15;;-1:-1:-1;;;3014:4:10;3005:14;;2998:36;3059:2;3050:12;;2909:159;3323:49;-1:-1:-1;;;;;3408:32:10;;;;3403:2;3388:18;;;;3381:60;;;;-1:-1:-1;3315:57:10;3073:374::o;3616:::-;3846:2;3835:9;3828:21;3809:4;3866:49;3911:2;3900:9;3896:18;3529:2;3517:15;;-1:-1:-1;;;3557:4:10;3548:14;;3541:36;3602:2;3593:12;;3452:159;4398:348;4628:2;4617:9;4610:21;4591:4;4648:49;4693:2;4682:9;4678:18;2986:2;2974:15;;-1:-1:-1;;;3014:4:10;3005:14;;2998:36;3059:2;3050:12;;2909:159;4648:49;4640:57;;4733:6;4728:2;4717:9;4713:18;4706:34;4398:348;;;;:::o;4751:::-;4981:2;4970:9;4963:21;4944:4;5001:49;5046:2;5035:9;5031:18;3529:2;3517:15;;-1:-1:-1;;;3557:4:10;3548:14;;3541:36;3602:2;3593:12;;3452:159;5104:610;5350:13;;5293:3;;5324;;5403:4;5430:15;;;5293:3;5473:175;5487:6;5484:1;5481:13;5473:175;;;5550:13;;5536:28;;5586:14;;;;5623:15;;;;5509:1;5502:9;5473:175;;;-1:-1:-1;;5657:21:10;;;-1:-1:-1;5694:14:10;;;;;-1:-1:-1;;;5104:610:10:o;5719:127::-;5780:10;5775:3;5771:20;5768:1;5761:31;5811:4;5808:1;5801:15;5835:4;5832:1;5825:15;5851:168;5924:9;;;5955;;5972:15;;;5966:22;;5952:37;5942:71;;5993:18;;:::i;6213:556::-;6415:2;6397:21;;;6454:3;6434:18;;;6427:31;6494:34;6489:2;6474:18;;6467:62;6565:34;6560:2;6545:18;;6538:62;6637:34;6631:3;6616:19;;6609:63;-1:-1:-1;;;6703:3:10;6688:19;;6681:46;6759:3;6744:19;;6213:556::o;6774:345::-;-1:-1:-1;;;;;6994:32:10;;;;6976:51;;7058:2;7043:18;;7036:34;;;;7101:2;7086:18;;7079:34;6964:2;6949:18;;6774:345::o;7124:127::-;7185:10;7180:3;7176:20;7173:1;7166:31;7216:4;7213:1;7206:15;7240:4;7237:1;7230:15;7256:127;7317:10;7312:3;7308:20;7305:1;7298:31;7348:4;7345:1;7338:15;7372:4;7369:1;7362:15;7388:135;7427:3;7448:17;;;7445:43;;7468:18;;:::i;:::-;-1:-1:-1;7515:1:10;7504:13;;7388:135::o;7736:899::-;7801:5;7854:3;7847:4;7839:6;7835:17;7831:27;7821:55;;7872:1;7869;7862:12;7821:55;7901:6;7895:13;7927:4;7950:18;7987:2;7983;7980:10;7977:36;;;7993:18;;:::i;:::-;8039:2;8036:1;8032:10;8071:2;8065:9;8134:2;8130:7;8125:2;8121;8117:11;8113:25;8105:6;8101:38;8189:6;8177:10;8174:22;8169:2;8157:10;8154:18;8151:46;8148:72;;;8200:18;;:::i;:::-;8236:2;8229:22;8286:18;;;8362:15;;;8358:24;;;8320:15;;;;-1:-1:-1;8394:15:10;;;8391:35;;;8422:1;8419;8412:12;8391:35;8458:2;8450:6;8446:15;8435:26;;8470:135;8486:6;8481:3;8478:15;8470:135;;;8552:10;;8540:23;;8583:12;;;;8503;;;;8470:135;;;8623:6;7736:899;-1:-1:-1;;;;;;;7736:899:10:o;8640:614::-;8769:6;8777;8830:2;8818:9;8809:7;8805:23;8801:32;8798:52;;;8846:1;8843;8836:12;8798:52;8879:9;8873:16;8908:18;8949:2;8941:6;8938:14;8935:34;;;8965:1;8962;8955:12;8935:34;8988:72;9052:7;9043:6;9032:9;9028:22;8988:72;:::i;:::-;8978:82;;9106:2;9095:9;9091:18;9085:25;9069:41;;9135:2;9125:8;9122:16;9119:36;;;9151:1;9148;9141:12;9119:36;;9174:74;9240:7;9229:8;9218:9;9214:24;9174:74;:::i;:::-;9164:84;;;8640:614;;;;;:::o;9538:442::-;-1:-1:-1;;;;;9785:32:10;;;;9767:51;;-1:-1:-1;;;;;;9854:33:10;;;;9849:2;9834:18;;9827:61;9919:2;9904:18;;9897:34;9962:2;9947:18;;9940:34;9754:3;9739:19;;9538:442::o;10834:125::-;10899:9;;;10920:10;;;10917:36;;;10933:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testBalanceOf()": "3df77c0e",
    "testContract()": "c36631b4",
    "testRouter()": "1afd7ba7",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testContract\",\"outputs\":[{\"internalType\":\"contract UniswapTest\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/UniswapTest.t.sol\":\"UniswapTestTester\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":v2-core/=lib/v2-core/contracts/\",\":v2-periphery/=lib/v2-periphery/contracts/\",\":v3-core/=lib/v3-core/\"]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0x8b9a55da60eb19bbc79ca38a71acecdba2f797551e36be33f5b2990f30c1bc2a\",\"urls\":[\"bzz-raw://895d918213a7f13ce60e1ad209913726314029fe951fe46d50b63fb29f5fbb47\",\"dweb:/ipfs/QmZrWEpFMuUYFqmU148T2XHSqbciCdqSF4xLgxohbLGfmQ\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.Sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1d562fd52631c5a4ca16e6befa43e66e443aa6b165c6b646ac2aa69974f94f56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b4df99f5a54dde8090a1b97ffd53fd09afe44b496e7e46a64d24e7fb6fb2bd\",\"dweb:/ipfs/QmP5zKDXnHq24WE4K2u6gYdLnh2FBropJAdzzDxpZqW231\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"src/UniswapTest.sol\":{\"keccak256\":\"0x9b5828e4fdf026ab08bee055e20e0dbf5c3b1bdcbda203d4028e3026e2b7ad24\",\"urls\":[\"bzz-raw://a8f4c6803754d192593bc6a5c4e3a8ec6333c4a5e856f8ab67bc9fb230eb20a8\",\"dweb:/ipfs/QmZyyvALycP1hDTeCaMPTLnSH8xcAJNKw7kah6Kk8HJGZf\"]},\"test/UniswapTest.t.sol\":{\"keccak256\":\"0x170097dbb2332a9c97dfab79ce7187a1bf93cc29e402d91268d2d3b7403d511e\",\"urls\":[\"bzz-raw://4f12cd753b64d3c7dae2c485390675328b539adf4b98eded2321489331561fc8\",\"dweb:/ipfs/Qmee3qGjruUXF5BruahVHauiRCZWLu7gHoeNmbRn21wmZK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testContract",
          "outputs": [
            {
              "internalType": "contract UniswapTest",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRouter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":v2-core/=lib/v2-core/contracts/",
        ":v2-periphery/=lib/v2-periphery/contracts/",
        ":v3-core/=lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/UniswapTest.t.sol": "UniswapTestTester"
      },
      "libraries": {}
    },
    "sources": {
      "interfaces/IERC20.sol": {
        "keccak256": "0x8b9a55da60eb19bbc79ca38a71acecdba2f797551e36be33f5b2990f30c1bc2a",
        "urls": [
          "bzz-raw://895d918213a7f13ce60e1ad209913726314029fe951fe46d50b63fb29f5fbb47",
          "dweb:/ipfs/QmZrWEpFMuUYFqmU148T2XHSqbciCdqSF4xLgxohbLGfmQ"
        ],
        "license": null
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.Sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1d562fd52631c5a4ca16e6befa43e66e443aa6b165c6b646ac2aa69974f94f56",
        "urls": [
          "bzz-raw://16b4df99f5a54dde8090a1b97ffd53fd09afe44b496e7e46a64d24e7fb6fb2bd",
          "dweb:/ipfs/QmP5zKDXnHq24WE4K2u6gYdLnh2FBropJAdzzDxpZqW231"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "src/UniswapTest.sol": {
        "keccak256": "0x9b5828e4fdf026ab08bee055e20e0dbf5c3b1bdcbda203d4028e3026e2b7ad24",
        "urls": [
          "bzz-raw://a8f4c6803754d192593bc6a5c4e3a8ec6333c4a5e856f8ab67bc9fb230eb20a8",
          "dweb:/ipfs/QmZyyvALycP1hDTeCaMPTLnSH8xcAJNKw7kah6Kk8HJGZf"
        ],
        "license": null
      },
      "test/UniswapTest.t.sol": {
        "keccak256": "0x170097dbb2332a9c97dfab79ce7187a1bf93cc29e402d91268d2d3b7403d511e",
        "urls": [
          "bzz-raw://4f12cd753b64d3c7dae2c485390675328b539adf4b98eded2321489331561fc8",
          "dweb:/ipfs/Qmee3qGjruUXF5BruahVHauiRCZWLu7gHoeNmbRn21wmZK"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/UniswapTest.t.sol",
    "id": 23448,
    "exportedSymbols": {
      "DSTest": [
        1855
      ],
      "IERC20": [
        68
      ],
      "IUniswapV2Router": [
        23307
      ],
      "Script": [
        2118
      ],
      "StdStorage": [
        5146
      ],
      "Test": [
        5048
      ],
      "UniswapTest": [
        23358
      ],
      "UniswapTestTester": [
        23447
      ],
      "Vm": [
        7141
      ],
      "console": [
        15205
      ],
      "console2": [
        23269
      ],
      "stdError": [
        5118
      ],
      "stdJson": [
        2478
      ],
      "stdMath": [
        6387
      ],
      "stdStorage": [
        6248
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1005:9",
    "nodes": [
      {
        "id": 23360,
        "nodeType": "PragmaDirective",
        "src": "0:24:9",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 23361,
        "nodeType": "ImportDirective",
        "src": "26:28:9",
        "absolutePath": "lib/forge-std/src/Test.Sol",
        "file": "forge-std/Test.Sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23448,
        "sourceUnit": 6388,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23362,
        "nodeType": "ImportDirective",
        "src": "55:32:9",
        "absolutePath": "src/UniswapTest.sol",
        "file": "../src/UniswapTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23448,
        "sourceUnit": 23359,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23363,
        "nodeType": "ImportDirective",
        "src": "88:34:9",
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23448,
        "sourceUnit": 69,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23447,
        "nodeType": "ContractDefinition",
        "src": "146:859:9",
        "nodes": [
          {
            "id": 23369,
            "nodeType": "UsingForDirective",
            "src": "188:32:9",
            "global": false,
            "libraryName": {
              "id": 23366,
              "name": "stdStorage",
              "nameLocations": [
                "194:10:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6248,
              "src": "194:10:9"
            },
            "typeName": {
              "id": 23368,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23367,
                "name": "StdStorage",
                "nameLocations": [
                  "209:10:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5146,
                "src": "209:10:9"
              },
              "referencedDeclaration": 5146,
              "src": "209:10:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$5146_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 23372,
            "nodeType": "VariableDeclaration",
            "src": "225:31:9",
            "constant": false,
            "functionSelector": "c36631b4",
            "mutability": "mutable",
            "name": "testContract",
            "nameLocation": "244:12:9",
            "scope": 23447,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UniswapTest_$23358",
              "typeString": "contract UniswapTest"
            },
            "typeName": {
              "id": 23371,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23370,
                "name": "UniswapTest",
                "nameLocations": [
                  "225:11:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23358,
                "src": "225:11:9"
              },
              "referencedDeclaration": 23358,
              "src": "225:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UniswapTest_$23358",
                "typeString": "contract UniswapTest"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23413,
            "nodeType": "FunctionDefinition",
            "src": "263:378:9",
            "body": {
              "id": 23412,
              "nodeType": "Block",
              "src": "287:354:9",
              "statements": [
                {
                  "expression": {
                    "id": 23380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23375,
                      "name": "testContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23372,
                      "src": "297:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniswapTest_$23358",
                        "typeString": "contract UniswapTest"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "312:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UniswapTest_$23358_$",
                          "typeString": "function () returns (contract UniswapTest)"
                        },
                        "typeName": {
                          "id": 23377,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23376,
                            "name": "UniswapTest",
                            "nameLocations": [
                              "316:11:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23358,
                            "src": "316:11:9"
                          },
                          "referencedDeclaration": 23358,
                          "src": "316:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UniswapTest_$23358",
                            "typeString": "contract UniswapTest"
                          }
                        }
                      },
                      "id": 23379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "312:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniswapTest_$23358",
                        "typeString": "contract UniswapTest"
                      }
                    },
                    "src": "297:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UniswapTest_$23358",
                      "typeString": "contract UniswapTest"
                    }
                  },
                  "id": 23381,
                  "nodeType": "ExpressionStatement",
                  "src": "297:32:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 23409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 23407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "622:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 23408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "629:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "622:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 23403,
                                "name": "testContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23372,
                                "src": "580:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UniswapTest_$23358",
                                  "typeString": "contract UniswapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UniswapTest_$23358",
                                  "typeString": "contract UniswapTest"
                                }
                              ],
                              "id": 23402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "572:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 23401,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "572:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "572:21:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                                            "id": 23394,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "485:42:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 23393,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "477:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 23392,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "477:7:9",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 23395,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "477:51:9",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 23391,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68,
                                      "src": "470:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 23396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "470:59:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$68",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 23397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "530:9:9",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29,
                                  "src": "470:69:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 23398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "540:8:9",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "470:78:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                                        "id": 23387,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "376:42:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 23386,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "368:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 23385,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "368:7:9",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 23388,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "368:51:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 23382,
                                    "name": "stdstore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2497,
                                    "src": "339:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StdStorage_$5146_storage",
                                      "typeString": "struct StdStorage storage ref"
                                    }
                                  },
                                  "id": 23384,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "361:6:9",
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5668,
                                  "src": "339:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5146_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$5146_storage_ptr_$bound_to$_t_struct$_StdStorage_$5146_storage_ptr_$",
                                    "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                  }
                                },
                                "id": 23389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "339:81:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$5146_storage_ptr",
                                  "typeString": "struct StdStorage storage pointer"
                                }
                              },
                              "id": 23390,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "466:3:9",
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5688,
                              "src": "339:130:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5146_storage_ptr_$_t_bytes4_$returns$_t_struct$_StdStorage_$5146_storage_ptr_$bound_to$_t_struct$_StdStorage_$5146_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,bytes4) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 23399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "339:210:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$5146_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 23400,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "563:8:9",
                          "memberName": "with_key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5741,
                          "src": "339:232:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5146_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$5146_storage_ptr_$bound_to$_t_struct$_StdStorage_$5146_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 23405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "339:255:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$5146_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 23406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "608:13:9",
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5848,
                      "src": "339:282:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$5146_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$5146_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 23410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "339:295:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23411,
                  "nodeType": "ExpressionStatement",
                  "src": "339:295:9"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "272:5:9",
            "parameters": {
              "id": 23373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:2:9"
            },
            "returnParameters": {
              "id": 23374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "287:0:9"
            },
            "scope": 23447,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23428,
            "nodeType": "FunctionDefinition",
            "src": "647:170:9",
            "body": {
              "id": 23427,
              "nodeType": "Block",
              "src": "679:138:9",
              "statements": [
                {
                  "assignments": [
                    23417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23417,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "697:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 23427,
                      "src": "689:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "689:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23421,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23418,
                        "name": "testContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23372,
                        "src": "707:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapTest_$23358",
                          "typeString": "contract UniswapTest"
                        }
                      },
                      "id": 23419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "720:10:9",
                      "memberName": "getBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23346,
                      "src": "707:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 23420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "689:43:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23423,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23417,
                        "src": "751:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030303030",
                        "id": 23424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "760:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 23422,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3236,
                        3261,
                        3274,
                        3290,
                        3332,
                        3374,
                        3416,
                        3453,
                        3490,
                        3527,
                        389,
                        414,
                        444,
                        469,
                        528,
                        553,
                        583,
                        608,
                        1708,
                        1743
                      ],
                      "referencedDeclaration": 583,
                      "src": "742:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23426,
                  "nodeType": "ExpressionStatement",
                  "src": "742:41:9"
                }
              ]
            },
            "functionSelector": "3df77c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOf",
            "nameLocation": "656:13:9",
            "parameters": {
              "id": 23414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:2:9"
            },
            "returnParameters": {
              "id": 23415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:9"
            },
            "scope": 23447,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23446,
            "nodeType": "FunctionDefinition",
            "src": "823:180:9",
            "body": {
              "id": 23445,
              "nodeType": "Block",
              "src": "852:151:9",
              "statements": [
                {
                  "assignments": [
                    23432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23432,
                      "mutability": "mutable",
                      "name": "routerAddress",
                      "nameLocation": "870:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 23445,
                      "src": "862:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23431,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "862:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23436,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23433,
                        "name": "testContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23372,
                        "src": "886:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapTest_$23358",
                          "typeString": "contract UniswapTest"
                        }
                      },
                      "id": 23434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "899:9:9",
                      "memberName": "getRouter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23357,
                      "src": "886:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 23435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "862:48:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23438,
                        "name": "routerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23432,
                        "src": "929:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                            "id": 23441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "952:42:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "944:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "944:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "944:51:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23437,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3236,
                        3261,
                        3274,
                        3290,
                        3332,
                        3374,
                        3416,
                        3453,
                        3490,
                        3527,
                        389,
                        414,
                        444,
                        469,
                        528,
                        553,
                        583,
                        608,
                        1708,
                        1743
                      ],
                      "referencedDeclaration": 389,
                      "src": "920:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 23443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:76:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23444,
                  "nodeType": "ExpressionStatement",
                  "src": "920:76:9"
                }
              ]
            },
            "functionSelector": "1afd7ba7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRouter",
            "nameLocation": "832:10:9",
            "parameters": {
              "id": 23429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:2:9"
            },
            "returnParameters": {
              "id": 23430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:0:9"
            },
            "scope": 23447,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23364,
              "name": "Test",
              "nameLocations": [
                "176:4:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5048,
              "src": "176:4:9"
            },
            "id": 23365,
            "nodeType": "InheritanceSpecifier",
            "src": "176:4:9"
          }
        ],
        "canonicalName": "UniswapTestTester",
        "contractDependencies": [
          23358
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23447,
          5048,
          2118,
          1855
        ],
        "name": "UniswapTestTester",
        "nameLocation": "155:17:9",
        "scope": 23448,
        "usedErrors": []
      }
    ]
  },
  "id": 9
}